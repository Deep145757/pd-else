#N canvas 631 23 575 606 10;
#X obj 3 316 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 3 438 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 3 475 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 157 447 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 3 570 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 137 196 noise~;
#X obj 3 3 cnv 15 301 42 empty empty sh~ 20 20 2 37 -233017 -1 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 23 40 cnv 4 4 4 empty empty Sample 0 28 2 18 -233017 -1 0;
#X obj 107 40 cnv 4 4 4 empty empty hold 0 28 2 18 -233017 -1 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 83 40 cnv 4 4 4 empty empty & 0 28 2 18 -233017 -1 0;
#X obj 157 414 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X obj 137 287 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0.323121 256;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 -74965 -212593
-262144 1 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 -74965 -212593
0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 504 62 pd;
#X obj 274 243 else/out~;
#X text 205 326 signal - input signal, f 31;
#X text 205 415 signal - gate signal, f 31;
#N canvas 431 69 768 381 downsampling 0;
#X obj 100 136 noise~;
#X obj 174 143 else/imp~ 100;
#X obj 82 222 else/out~;
#X obj 177 94 hsl 128 15 100 44100 1 0 empty empty empty -2 -8 0 10
-228856 -1 -1 0 1;
#X obj 174 121 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 478 129 noise~;
#X obj 460 215 else/out~;
#X obj 541 87 hsl 128 15 100 44100 1 0 empty empty empty -2 -8 0 10
-228856 -1 -1 0 1;
#X obj 538 114 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 478 169 samphold~;
#X obj 538 136 phasor~ 100;
#X text 394 17 This isn't possible with the corresponding vanilla counterparts
because of the way they were designed. Change the slider up to the
sample rate and check it out., f 51;
#X obj 100 176 else/sh~;
#X text 29 21 With [sh~] you can downsample a signal (in a "sample
and hold" fashion) and raise it up to the sample rate \, when in gate
mode., f 45;
#X text 202 306 Note that in trigger mode \, it can only go up to the
Nyquist frequency. But for frequencies below Nyquist \, an impulse
generator will behave the same way for both modes!;
#X connect 0 0 12 0;
#X connect 1 0 12 1;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 9 0;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 6 0;
#X connect 9 0 6 1;
#X connect 10 0 9 1;
#X connect 12 0 2 0;
#X connect 12 0 2 1;
#X restore 436 278 pd downsampling;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X text 200 447 signal - sampled and held signal;
#X obj 137 259 else/sig2float~;
#X text 219 343 bang - sample the signal, f 29;
#X obj 157 327 cnv 17 3 82 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 170 361 set <float> - set the held value, f 36;
#N canvas 446 163 872 343 more 0;
#X obj 647 141 noise~;
#X obj 647 271 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 1.55 256;
#X obj 647 239 else/sig2float~;
#X obj 711 156 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 205 165 noise~;
#X obj 205 276 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 -0.319241 256;
#X obj 205 240 else/sig2float~;
#X obj 286 164 osc~ 1;
#X msg 114 165 thresh \$1;
#X obj 114 145 nbx 5 14 -0.9 0.9 0 0 empty empty empty 0 -8 0 10 -228856
-1 -1 0 256;
#X obj 117 124 hsl 128 15 -0.9 0.9 0 0 empty empty empty -2 -8 0 10
-228856 -1 -1 0 1;
#X msg 576 140 set \$1;
#X obj 576 121 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 44 26 The first argument of [sh~] is the threshold value value
(0 by default) \, so the signal from the right inlet needs to be greater
than it to sample and output the incoming signal. The threshold value
can also be set via the "thresh" message., f 52;
#X obj 205 206 else/sh~ 0.9;
#X obj 647 192 else/sh~ 0 1.55;
#X text 450 26 The second argument of [sh~] is for the initially held
value (0 by default) \, so it is output when loading the object and
before it is triggered by the right inlet. The set message can set
the held output. The [sh~] can also be triggered by a bang., f 55
;
#X connect 0 0 15 0;
#X connect 2 0 1 0;
#X connect 3 0 15 0;
#X connect 4 0 14 0;
#X connect 6 0 5 0;
#X connect 7 0 14 1;
#X connect 8 0 14 0;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X connect 11 0 15 0;
#X connect 12 0 11 0;
#X connect 14 0 6 0;
#X connect 15 0 2 0;
#X restore 492 253 pd more;
#X text 154 483 1) float - initial threshold (default 0), f 49;
#X text 154 499 2) float - initially held value (default 0), f 49
;
#X obj 137 225 else/sh~;
#X obj 274 181 else/imp~ 2;
#X text 154 515 3) float - mode: 0 (gate \, default) or 1 (trigger)
;
#X obj 3 535 cnv 3 550 3 empty empty flags 8 12 0 13 -228856 -1 0;
#X text 188 544 "-tr" - sets to trigger mode;
#X text 219 379 gate - sets to gate mode, f 29;
#X text 198 396 trigger - sets to trigger mode, f 32;
#N canvas 727 74 515 524 modes 0;
#X obj 243 202 noise~;
#X obj 243 383 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 -0.902521 256;
#X obj 262 277 else/out~;
#X obj 243 237 else/sh~;
#X obj 243 353 else/sig2float~;
#X msg 204 170 gate;
#X msg 140 170 trigger;
#X text 58 18 By default \, [sh~] is in gate mode. Below \, we have
an oscillator in the second inlet \, so when its values are greater
than zero \, the gate is open and the signal passes through \, being
held only when the oscillator values are less or equal to zero., f
55;
#X text 57 92 In trigger mode \, it will sample and hold until the
next trigger \, which happens when the second inlet value is greater
than the threshold and its last value was equal or below it., f 55
;
#X text 244 171 <= change modes;
#X obj 296 203 osc~ 1;
#X obj 346 473 else/sh~ -tr;
#X text 72 417 You can change the mode with the messages like above
\, or set it with the third argument. Alternatively \, you can set
it to trigger mode with the "-tr" flag as in:, f 55;
#X connect 0 0 3 0;
#X connect 3 0 2 0;
#X connect 3 0 2 1;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 10 0 3 1;
#X restore 485 227 pd modes;
#X obj 98 195 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X text 37 92 [sh~] samples and holds a value from the left inlet.
In "gate" mode (default) \, values are sampled if the signal in the
right inlet is greater than the threshold (0 by default) \, or held
if lesser or equal to it. In "trigger" mode \, the value needs to fall
below the threshold before it can retrigger [sh~]. A bang also triggers
it., f 62;
#X connect 5 0 34 0;
#X connect 27 0 18 0;
#X connect 34 0 27 0;
#X connect 35 0 20 0;
#X connect 35 0 20 1;
#X connect 35 0 34 1;
#X connect 42 0 34 0;
