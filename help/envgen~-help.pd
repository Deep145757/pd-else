#N canvas 492 23 570 712 10;
#X obj 8 682 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 8 391 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 8 545 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 8 605 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 81 404 cnv 17 3 134 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 81 554 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 149 554 signal;
#X msg 121 185 pause;
#X msg 164 185 resume;
#X text 161 439 list;
#X obj 81 577 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 155 503 pause;
#X text 149 520 resume;
#X text 200 503 - pauses the output, f 53;
#X obj 211 154 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 267 294 vsl 20 80 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X text 200 554 - envelope signal;
#X msg 279 196 0 1000 1 500 0;
#X obj 25 41 cnv 4 4 4 empty empty Envelope 0 28 2 18 -233017 -1 0
;
#X obj 103 41 cnv 4 4 4 empty empty generator 0 28 2 18 -233017 -1
0;
#X obj 4 4 cnv 15 301 42 empty empty envgen~ 20 20 2 37 -233017 -1
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 4 4 graph;
#X obj 307 5 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#X obj 346 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 459 12 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 479 12 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 516 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 465 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 503 27 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 306 4 graph;
#X obj 267 260 else/sig2float~;
#X text 294 363 0;
#X text 290 290 1;
#X obj 196 278 *~;
#X obj 153 316 else/out~;
#X obj 125 237 osc~ 440;
#X msg 261 170 set 100 1 100 0.6 1000 0.6 500 0;
#X text 200 439 -;
#X text 125 469 set <list>;
#X text 161 404 bang;
#X text 200 404 - starts the envelope, f 53;
#X text 155 577 float;
#X text 201 577 - status: 1 <on> \, 0 <off>;
#X obj 211 225 else/envgen~ 0 1000 1 500 0;
#N canvas 525 23 480 461 status 0;
#X obj 352 239 switch~;
#X obj 352 171 tgl 50 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 106 199 *~;
#X obj 41 137 osc~ 440;
#X obj 193 187 else/sig2float~;
#X obj 193 223 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 281 235 else/setdsp~;
#X obj 63 244 else/out~;
#X text 31 19 [envgen~] has a right outlet that sends a status value
(1 when the envelope starts and 0 when it ends). This can be useful
for different things \, but particularly to turn on and off the DSP
processing of a subpatch or abstraction with [switch~]., f 62;
#X obj 121 95 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 121 134 else/envgen~ 50 1 150 0.6 500 0.6 250 0;
#X obj 337 415 clone;
#X text 315 390 see also:;
#X text 62 362 You should also check try pd's [clone] object for managing
polyphonic synths.;
#X connect 1 0 0 0;
#X connect 2 0 7 0;
#X connect 2 0 7 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 9 0 10 0;
#X connect 10 0 2 1;
#X connect 10 0 4 0;
#X connect 10 1 1 0;
#X restore 481 260 pd status;
#X text 200 468 - sets the envelope and doesn't run it, f 53;
#N canvas 530 146 719 476 gain 0;
#X obj 95 210 else/display;
#X obj 223 390 else/out~;
#X obj 195 337 else/plateverb~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 95 181 else/randi 36 72;
#X obj 195 308 *~;
#X obj 95 244 mtof;
#X obj 109 277 else/bl.vsaw~;
#X obj 210 263 else/envgen~ 10 1 40 0.5 400 0.5 50 0, f 19;
#X obj 210 180 else/randf 0.25 1;
#X text 41 202 MIDI Pitch =>, f 8;
#X obj 561 163 else/rescale;
#X obj 468 184 stripnote;
#X obj 561 191 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 468 112 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 468 45 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 468 139 makenote 127 750;
#X obj 576 358 else/out~;
#X obj 546 308 else/plateverb~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 546 279 *~;
#X obj 468 243 osc~;
#X obj 468 212 mtof;
#X obj 561 226 else/envgen~ 10 1 40 0.5 400 0.5 50 0, f 19;
#X obj 468 80 else/randi 60 84;
#X obj 210 141 else/tempo 60 50;
#X obj 210 115 tgl 18 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 230 116 <= generate random notes;
#X obj 210 212 else/display 6;
#X text 268 214 <= gain;
#X obj 134 245 osc~ 0.5;
#X text 41 20 A float triggers the envelope and sets an overall gain
(which is 1 by default). This is useful for a velocity type sensitivity
\, so the envelope corresponds to a given input gain. A float/gain
value of 0 is ignored and doesn't trigger the envelope \, but you still
need something like [stripnote] to filter out undesired MIDI note off
messages.;
#X connect 0 0 5 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 0 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 4 1;
#X connect 8 0 26 0;
#X connect 10 0 11 1;
#X connect 10 0 12 0;
#X connect 11 0 20 0;
#X connect 12 0 21 0;
#X connect 13 0 15 0;
#X connect 14 0 22 0;
#X connect 15 0 11 0;
#X connect 15 1 10 0;
#X connect 17 0 16 0;
#X connect 17 1 16 1;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 20 0 19 0;
#X connect 21 0 18 1;
#X connect 22 0 13 0;
#X connect 23 0 3 0;
#X connect 23 0 8 0;
#X connect 24 0 23 0;
#X connect 26 0 7 0;
#X connect 28 0 6 1;
#X restore 492 283 pd gain;
#X text 200 421 - sets overall gain and starts the envelope, f 53
;
#X text 200 520 - resumes the envelope after being paused, f 53;
#X text 68 90 [envgen~] is a general purpose envelope generator. It
can also be considered a line segment generator like Vanilla's [line~]
or [vline~].;
#N canvas 500 133 451 407 gate 0;
#X obj 173 320 else/out~;
#X obj 173 287 *~;
#X msg 233 146 set 10 1 40 0.5 \, gain \$1, f 16;
#X msg 188 148 250 0;
#X obj 188 96 tgl 18 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 188 182 else/envgen~;
#X obj 188 123 select 0;
#X obj 55 247 else/bl.saw~;
#X obj 55 220 else/rescale~ 50 300;
#X obj 55 195 else/rampnoise~ 10;
#X text 118 148 release =>;
#X text 340 151 <=;
#X text 356 150 attack \, decay \, sustain, f 7;
#X text 30 24 You can force a gate on/off behaviour (such as from a
note on/off input) with a [select] object. Below we have separate lines
\, one for the attack/decay/sustain when receiving a gate on message
\, and a release line when receiving a gate off., f 61;
#X connect 1 0 0 0;
#X connect 1 0 0 1;
#X connect 2 0 5 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 1 1;
#X connect 6 0 3 0;
#X connect 6 1 2 0;
#X connect 7 0 1 0;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X restore 492 307 pd gate;
#N canvas 356 215 695 411 list 0;
#X obj 102 247 else/sig2float~;
#X obj 102 278 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X msg 129 189 0 1000 1;
#X obj 102 129 tgl 17 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X msg 102 154 500 \$1;
#X text 190 189 start \, duration \, target;
#X text 149 153 duration \, target;
#X obj 420 220 else/sig2float~;
#X obj 420 253 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 420 141 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 28 21 When receiving a list of two or more elements \, [envgen~]
outputs line segments. The line segments are set in pairs of duration
and target value \, which is the opposite of the [line] family of objects
from Pd Vanilla., f 49;
#X text 28 85 But if you have an odd number of elements \, the first
float sets a staring point. See examples below., f 49;
#X obj 283 266 else/setdsp~;
#X text 128 372 0;
#X text 127 273 1;
#X text 446 347 0;
#X text 445 248 1;
#X obj 68 205 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 102 217 else/envgen~;
#X obj 420 173 else/envgen~ 0 1000 1 250 0.25 250 0.25 500 1 250 1
250 0 -init 0.5, f 30;
#X text 356 87 Being an all purpose line/envelope generator \, you
can use it to create complex envelope lines \,, f 51;
#X text 356 34 If you give [envgen~] just a float as the argument \,
it initializes the object to output that value as a starting point.
You can also initialize it with the -init flag., f 51;
#X connect 0 0 1 0;
#X connect 2 0 18 0;
#X connect 3 0 4 0;
#X connect 4 0 18 0;
#X connect 7 0 8 0;
#X connect 9 0 19 0;
#X connect 17 0 18 0;
#X connect 18 0 0 0;
#X connect 19 0 7 0;
#X restore 494 237 pd list;
#X text 264 152 ADSR (attack \, decay \, sustain \, release);
#X text 374 196 AR (attack \, release);
#X text 105 155 trigger envelope;
#N canvas 602 207 462 373 retrigger 0;
#X obj 138 203 *~;
#X obj 73 151 osc~ 440;
#X obj 214 190 else/sig2float~;
#X obj 214 223 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 153 98 bng 20 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 95 253 else/out~;
#X text 180 101 <= click multiple times;
#X obj 153 139 else/envgen~ 100 1 300 0.25 1000 0.25 500 0;
#X text 60 23 When you give [envgen~] an even number of elements to
set the line segments \, you can retrigger the envelope so the envelope
restarts the attack ramp without raising from 0 - try it below or on
the right., f 56;
#X connect 0 0 5 0;
#X connect 0 0 5 1;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 4 0 7 0;
#X connect 7 0 0 1;
#X connect 7 0 2 0;
#X restore 462 331 pd retrigger;
#X text 95 485 setgain <float>;
#X text 155 421 float;
#X text 212 440 sets and runs envelope. Lists are pairs of duration
& target. If odd \, 1st float is the starting point, f 51;
#X text 200 485 - sets overall gain, f 53;
#X text 153 616 1) list -;
#X text 212 616 a float sets an initial output value \, a list of floats
to set the envelope, f 51;
#N canvas 447 164 586 450 envelope 0;
#X obj 239 246 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 502 151 1;
#X obj 239 326 else/envgen~;
#X obj 112 303 *~;
#X obj 69 350 else/out~;
#X obj 290 270 else/setmess;
#X text 501 247 0;
#X obj 112 234 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 200 256;
#X obj 290 124 else/initmess 0 50 1 50 0.6 300 0.6 200 0;
#X obj 112 267 else/bl.tri~;
#X obj 112 205 else/initmess 200;
#X obj 293 157 else/envelope;
#X msg 290 298 0 50 1 50 0.6 300 0.6 200 0;
#X text 120 30 Here's an example on how to use [envelope] with [envgen~].
Since [envelope] is always outputing a list you can use something like
[setmess] and only trigger the envelope when sending a bang or a float.
Check the help file of [envelope] for more details on how it works.
;
#X connect 0 0 2 0;
#X connect 2 0 3 1;
#X connect 3 0 4 1;
#X connect 3 0 4 0;
#X connect 5 0 2 0;
#X connect 5 0 12 0;
#X connect 7 0 9 0;
#X connect 8 0 11 0;
#X connect 9 0 3 0;
#X connect 10 0 7 0;
#X connect 11 0 5 0;
#X restore 469 357 pd envelope;
#X obj 8 648 cnv 3 550 3 empty empty flags 8 12 0 13 -228856 -1 0;
#X text 171 658 -init <float> (default 0);
#X connect 7 0 43 0;
#X connect 8 0 43 0;
#X connect 14 0 43 0;
#X connect 17 0 43 0;
#X connect 30 0 15 0;
#X connect 33 0 34 1;
#X connect 33 0 34 0;
#X connect 35 0 33 0;
#X connect 36 0 43 0;
#X connect 43 0 30 0;
#X connect 43 0 33 1;
