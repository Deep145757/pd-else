#N canvas 654 23 570 639 10;
#X obj 8 611 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 8 280 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 8 471 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 8 521 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 91 287 cnv 17 3 178 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 91 478 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 166 478 signal;
#X text 178 312 list;
#X obj 91 499 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 172 394 pause;
#X text 166 408 resume;
#X text 217 394 - pauses the output, f 53;
#X text 217 478 - envelope signal;
#X obj 25 41 cnv 4 4 4 empty empty Envelope 0 28 2 18 -233017 -1 0
;
#X obj 103 41 cnv 4 4 4 empty empty generator 0 28 2 18 -233017 -1
0;
#X obj 4 3 cnv 15 301 42 empty empty envgen~ 20 20 2 37 -233017 -1
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 4 4 graph;
#X obj 307 5 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#X obj 346 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 459 12 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 479 12 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 516 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 465 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 503 27 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 306 4 graph;
#X text 217 312 -;
#X text 142 339 set <list>;
#X text 178 299 bang;
#X text 172 499 float;
#X text 218 499 - status: 1 <on> \, 0 <off>;
#N canvas 525 23 480 461 status 0;
#X obj 352 239 switch~;
#X obj 352 171 tgl 50 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 106 199 *~;
#X obj 41 137 osc~ 440;
#X obj 193 187 else/sig2float~;
#X obj 193 223 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 281 235 else/setdsp~;
#X obj 63 244 else/out~;
#X text 31 19 [envgen~] has a right outlet that sends a status value
(1 when the envelope starts and 0 when it ends). This can be useful
for different things \, but particularly to turn on and off the DSP
processing of a subpatch or abstraction with [switch~]., f 62;
#X obj 121 95 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 121 134 else/envgen~ 50 1 150 0.6 500 0.6 250 0;
#X obj 337 415 clone;
#X text 315 390 see also:;
#X text 62 362 You should also check try pd's [clone] object for managing
polyphonic synths.;
#X connect 1 0 0 0;
#X connect 2 0 7 0;
#X connect 2 0 7 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 9 0 10 0;
#X connect 10 0 2 1;
#X connect 10 0 4 0;
#X connect 10 1 1 0;
#X restore 487 154 pd status;
#X text 217 338 - sets the envelope and doesn't run it, f 53;
#N canvas 530 146 719 476 gain 0;
#X obj 95 210 else/display;
#X obj 223 390 else/out~;
#X obj 195 337 else/plateverb~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 95 181 else/randi 36 72;
#X obj 195 308 *~;
#X obj 95 244 mtof;
#X obj 109 277 else/bl.vsaw~;
#X obj 210 263 else/envgen~ 10 1 40 0.5 400 0.5 50 0, f 19;
#X obj 210 180 else/randf 0.25 1;
#X text 41 202 MIDI Pitch =>, f 8;
#X obj 561 163 else/rescale;
#X obj 468 184 stripnote;
#X obj 561 191 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 468 112 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 468 45 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 468 139 makenote 127 750;
#X obj 576 358 else/out~;
#X obj 546 308 else/plateverb~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 546 279 *~;
#X obj 468 243 osc~;
#X obj 468 212 mtof;
#X obj 561 226 else/envgen~ 10 1 40 0.5 400 0.5 50 0, f 19;
#X obj 468 80 else/randi 60 84;
#X obj 210 141 else/tempo 60 50;
#X obj 210 115 tgl 18 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 230 116 <= generate random notes;
#X obj 210 212 else/display 6;
#X text 268 214 <= gain;
#X obj 134 245 osc~ 0.5;
#X text 41 20 A float triggers the envelope and sets an overall gain
(which is 1 by default). This is useful for a velocity type sensitivity
\, so the envelope corresponds to a given input gain. A float/gain
value of 0 is ignored and doesn't trigger the envelope \, but you still
need something like [stripnote] to filter out undesired MIDI note off
messages.;
#X connect 0 0 5 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 0 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 4 1;
#X connect 8 0 26 0;
#X connect 10 0 11 1;
#X connect 10 0 12 0;
#X connect 11 0 20 0;
#X connect 12 0 21 0;
#X connect 13 0 15 0;
#X connect 14 0 22 0;
#X connect 15 0 11 0;
#X connect 15 1 10 0;
#X connect 17 0 16 0;
#X connect 17 1 16 1;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 20 0 19 0;
#X connect 21 0 18 1;
#X connect 22 0 13 0;
#X connect 23 0 3 0;
#X connect 23 0 8 0;
#X connect 24 0 23 0;
#X connect 26 0 7 0;
#X connect 28 0 6 1;
#X restore 499 173 pd gain;
#X text 217 408 - resumes the envelope after being paused, f 53;
#X text 69 85 [envgen~] is a general purpose envelope generator. It
can also be considered a line segment generator like Vanilla's [line~]
or [vline~].;
#N canvas 356 215 695 411 list 0;
#X obj 102 247 else/sig2float~;
#X obj 102 278 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 4950 1;
#X msg 129 189 0 1000 1;
#X obj 102 129 tgl 17 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X msg 102 154 500 \$1;
#X text 190 189 start \, duration \, target;
#X text 149 153 duration \, target;
#X obj 420 220 else/sig2float~;
#X obj 420 253 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 4950 1;
#X obj 420 141 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 28 21 When receiving a list of two or more elements \, [envgen~]
outputs line segments. The line segments are set in pairs of duration
and target value \, which is the opposite of the [line] family of objects
from Pd Vanilla., f 49;
#X text 28 85 But if you have an odd number of elements \, the first
float sets a staring point. See examples below., f 49;
#X obj 283 266 else/setdsp~;
#X text 128 372 0;
#X text 127 273 1;
#X text 446 347 0;
#X text 445 248 1;
#X obj 420 173 else/envgen~ 0 1000 1 250 0.25 250 0.25 500 1 250 1
250 0 -init 0.5, f 30;
#X text 356 87 Being an all purpose line/envelope generator \, you
can use it to create complex envelope lines \,, f 51;
#X text 356 34 If you give [envgen~] just a float as the argument \,
it initializes the object to output that value as a starting point.
You can also initialize it with the -init flag., f 51;
#X obj 102 217 else/envgen~ 0.5;
#X connect 0 0 1 0;
#X connect 2 0 20 0;
#X connect 3 0 4 0;
#X connect 4 0 20 0;
#X connect 7 0 8 0;
#X connect 9 0 17 0;
#X connect 17 0 7 0;
#X connect 20 0 0 0;
#X restore 499 135 pd list;
#X text 112 352 setgain <float>;
#X text 172 285 float;
#X text 229 313 sets and runs envelope. Lists are pairs of duration
& target. If odd \, 1st float is the starting point, f 51;
#X text 217 352 - sets overall gain, f 53;
#X text 156 532 1) list -;
#N canvas 447 164 586 450 envelope 0;
#X obj 232 268 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 495 173 1;
#X obj 105 325 *~;
#X obj 62 372 else/out~;
#X obj 283 292 else/setmess;
#X text 494 269 0;
#X obj 105 256 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 440 256;
#X obj 283 146 else/initmess 0 50 1 50 0.6 300 0.6 200 0;
#X obj 105 289 else/bl.tri~;
#X obj 286 179 else/envelope;
#X msg 283 320 0 50 1 50 0.6 300 0.6 200 0;
#X text 120 12 Here's an example on how to use [envelope] with [envgen~].
Since [envelope] is always outputing a list you can use something like
[setmess] and only trigger the envelope when sending a bang or a float.
Check the help file of [envelope] for more details on how it works.
;
#X text 120 78 Note that [envelope] always sends an odd number of elements
\, so you can use "legato" mode or not \, and also set a retrigger
time if you will.;
#X obj 232 354 else/envgen~ -retrigger 10;
#X obj 105 227 else/initmess 440;
#X connect 0 0 13 0;
#X connect 2 0 3 1;
#X connect 2 0 3 0;
#X connect 4 0 10 0;
#X connect 4 0 13 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 2 0;
#X connect 9 0 4 0;
#X connect 13 0 2 1;
#X connect 14 0 6 0;
#X restore 475 250 pd envelope;
#X obj 8 563 cnv 3 550 3 empty empty flags 8 12 0 13 -228856 -1 0;
#N canvas 333 182 858 398 legato 0;
#X obj 128 219 *~;
#X obj 63 167 osc~ 440;
#X obj 204 206 else/sig2float~;
#X obj 204 239 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 143 114 bng 20 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 85 269 else/out~;
#X text 170 117 <= click multiple times;
#X obj 143 155 else/envgen~ 100 1 300 0.25 1000 0.25 500 0;
#X text 69 23 When you give [envgen~] an even number of elements to
set the line segments it operates in legato mode. In this mode \, you
can retrigger the envelope before it reaches the end point (say "0")
and it'll restart the attack ramp without raising from 0 - try it below.
, f 56;
#X obj 523 228 *~;
#X obj 458 176 osc~ 440;
#X obj 599 215 else/sig2float~;
#X obj 599 248 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 538 123 bng 20 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 480 278 else/out~;
#X text 565 126 <= click multiple times;
#X obj 538 164 else/envgen~ 0 100 1 300 0.25 1000 0.25 500 0;
#X msg 461 124 legato \$1;
#X obj 461 103 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 445 20 For an odd number of elements \, the first float is
a starting point as it retriggers from the starting point. Therefore
it doesn't operate in legato mode. But you can force a legato mode
with the legato message or flag. Try it below.;
#X connect 0 0 5 0;
#X connect 0 0 5 1;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 4 0 7 0;
#X connect 7 0 0 1;
#X connect 7 0 2 0;
#X connect 9 0 14 0;
#X connect 9 0 14 1;
#X connect 10 0 9 0;
#X connect 11 0 12 0;
#X connect 13 0 16 0;
#X connect 16 0 9 1;
#X connect 16 0 11 0;
#X connect 17 0 16 0;
#X connect 18 0 17 0;
#X restore 487 211 pd legato;
#N canvas 612 166 511 426 retrigger 0;
#X obj 136 274 *~;
#X obj 71 222 osc~ 440;
#X obj 212 261 else/sig2float~;
#X obj 212 294 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 151 169 bng 20 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 93 324 else/out~;
#X text 178 172 <= click multiple times;
#X msg 64 173 retrigger \$1;
#X obj 64 146 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 151 210 else/envgen~ 0 100 1 300 0.25 1000 0.25 500 0 -retrigger
10, f 45;
#X text 44 18 As mentioned \, when not in legato mode (and for an odd
number of elements) \, the envelope imediatelly retriggers and restarts
from the starting point. But you can set a retrigger time in ms with
the "retrigger" message or flag. This adds an extra ramp to this starting
point. this is sueful if you do not want to play in legato mode but
want to avoid clicks. A small amount such as 10 ms is already usually
enough for this non legato effect., f 62;
#X connect 0 0 5 0;
#X connect 0 0 5 1;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 4 0 9 0;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 9 0 0 1;
#X connect 9 0 2 0;
#X restore 469 230 pd retrigger;
#X text 100 436 retrigger <float>;
#X text 217 436 - retrigger time in ms, f 53;
#X text 118 450 legato <float>;
#X text 217 450 - non-0 sets to legato mode, f 53;
#N canvas 557 138 680 518 gate-sustain 0;
#X obj 86 241 else/display;
#X obj 214 421 else/out~;
#X obj 186 368 else/plateverb~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 86 212 else/randi 36 72;
#X obj 186 339 *~;
#X obj 86 275 mtof;
#X obj 100 308 else/bl.vsaw~;
#X obj 201 294 else/envgen~ 10 1 40 0.5 400 0.5 50 0, f 19;
#X obj 201 211 else/randf 0.25 1;
#X text 32 233 MIDI Pitch =>, f 8;
#X obj 469 237 else/rescale;
#X obj 469 265 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 484 432 else/out~;
#X obj 454 382 else/plateverb~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 454 353 *~;
#X obj 406 266 mtof;
#X obj 201 172 else/tempo 60 50;
#X obj 201 136 tgl 18 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 221 137 <= generate random notes, f 12;
#X obj 201 243 else/display 6;
#X text 259 245 <= gain;
#X obj 125 276 osc~ 0.5;
#X text 21 17 By default \, [envgen~] has no sustain point \, which
means it also doesn't have a release ramp and generates the whole envelope
at "one-shot" when receiving an attack or "gate on"., f 57;
#X text 21 71 A non-zero input triggers the envelope as a "gate on"
message and sets an overall gain (which is 1 by default). A zero value
is ignored if there's no sustain point., f 57;
#X obj 469 300 else/envgen~ 10 1 40 0.5 50 0 -sustain 2, f 24;
#X obj 406 107 keyboard 17 80 2 4;
#X obj 406 207 unpack;
#X obj 406 297 bl.tri~;
#X text 400 17 When you set a sustain point \, with the sustain message
or flag \, then [envgen~] holds at the given point until it receives
a 0 or release message., f 39;
#X text 400 73 Here's [envgen~] as an ADRS envelope:, f 39;
#X connect 0 0 5 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 0 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 4 1;
#X connect 8 0 19 0;
#X connect 10 0 11 0;
#X connect 11 0 24 0;
#X connect 13 0 12 0;
#X connect 13 1 12 1;
#X connect 14 0 13 0;
#X connect 15 0 27 0;
#X connect 16 0 3 0;
#X connect 16 0 8 0;
#X connect 17 0 16 0;
#X connect 19 0 7 0;
#X connect 21 0 6 1;
#X connect 24 0 14 1;
#X connect 25 0 26 0;
#X connect 26 0 15 0;
#X connect 26 1 10 0;
#X connect 27 0 14 0;
#X restore 451 192 pd gate-sustain;
#X text 106 422 suspoint <float>;
#X text 217 422 - sets sustain point, f 53;
#X text 217 285 - gate: on/attack (non-0) or off/release (0), f 53
;
#X text 166 366 attack;
#X text 217 299 - attacks the envelope with the last gate on value
, f 53;
#X text 217 366 - same as bang, f 53;
#X text 160 380 release;
#X text 217 380 - same as gate off, f 53;
#N canvas 381 23 573 428 basic 0;
#X msg 131 157 pause;
#X msg 174 157 resume;
#X obj 221 126 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 269 258 vsl 20 80 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X msg 289 168 0 1000 1 500 0;
#X obj 269 228 else/sig2float~;
#X text 293 329 0;
#X text 292 254 1;
#X obj 206 250 *~;
#X obj 163 288 else/out~;
#X obj 135 209 osc~ 440;
#X msg 271 142 set 100 1 100 0.6 1000 0.6 500 0;
#X obj 221 197 else/envgen~ 0 1000 1 500 0;
#X text 274 124 ADSR (attack \, decay \, sustain \, release);
#X text 384 168 AR (attack \, release);
#X connect 0 0 12 0;
#X connect 1 0 12 0;
#X connect 2 0 12 0;
#X connect 4 0 12 0;
#X connect 5 0 3 0;
#X connect 8 0 9 1;
#X connect 8 0 9 0;
#X connect 10 0 8 0;
#X connect 11 0 12 0;
#X connect 12 0 5 0;
#X connect 12 0 8 1;
#X restore 493 117 pd basic;
#X obj 222 182 *~;
#X obj 179 217 else/out~;
#X obj 175 151 osc~ 440;
#X obj 237 149 else/envgen~ 0 1000 1 500 0;
#X obj 237 123 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 119 570 -init <float> (default 0) | -retrigger <float> (default
0) | -sustain <float> (default 0) | -legato (sets to legato mode on
\, default is off);
#X text 215 532 a float sets an initial output value \, a list of floats
to set the envelope (default 0 0), f 51;
#X obj 292 176 else/sig2float~;
#X obj 292 200 vsl 18 65 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X text 312 255 0;
#X text 313 197 1;
#X connect 59 0 60 1;
#X connect 59 0 60 0;
#X connect 61 0 59 0;
#X connect 62 0 59 1;
#X connect 62 0 66 0;
#X connect 63 0 62 0;
#X connect 66 0 67 0;
