#N canvas 556 37 567 441 10;
#X obj 4 413 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 5 253 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 5 328 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 5 359 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 119 335 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 196 336 signal;
#X text 178 363 1) symbol;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 4 pd;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 25 41 cnv 4 4 4 empty empty Table 0 28 2 18 -233017 -1 0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X obj 78 41 cnv 4 4 4 empty empty reader 0 28 2 18 -233017 -1 0;
#X obj 3 4 cnv 15 301 42 empty empty table~ 20 20 2 37 -233017 -1 0
;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 4 graph;
#X text 184 394 3) float;
#X text 184 379 2) float;
#X obj 120 262 cnv 17 3 60 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 238 363 - array name (optional \, default none), f 43;
#X obj 212 165 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#N canvas 198 207 361 306 table 0;
#X obj 27 74 cnv 15 298 198 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-table 515 float 0;
#X coords 0 1 514 -1 300 200 1 0 0;
#X restore 26 74 graph;
#X obj 92 18 else/initmess \; \$0-table sinesum 512 1 0.5 0.333 0.25
\, normalize, f 38;
#X restore 113 208 pd table;
#X text 156 276 set <symbol> - sets an entire array to be used as a
waveform, f 62;
#X text 56 197 check table =>, f 8;
#X obj 212 221 display~;
#X text 83 89 [table~] reads an array with 4 point interpolation. It
accepts indexes from 0 to 1 by default.;
#X obj 215 142 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 212 191 else/table~ \$0-table;
#X text 156 261 float/signal - sets index/phase, f 62;
#X text 238 336 - table values;
#N canvas 521 112 552 338 oscillator 0;
#X obj 83 173 else/out~;
#X obj 197 142 else/graph~ 441 11;
#X obj 126 93 else/table~;
#X obj 126 34 nbx 6 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 95 256;
#X obj 126 63 phasor~ 100;
#X obj 32 42 else/initmess set \$0-table, f 13;
#X text 231 39 If you connect a [phasor~] into [table~] \, it becames
a wavetable oscillator like [tabosc4~] or [else/wavetable~]. Note that
besides the first argument \, the "set" message followed by an array
name sets an array to be read., f 47;
#X connect 2 0 0 0;
#X connect 2 0 0 1;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X restore 464 184 pd oscillator;
#X text 238 379 - non-0 sets to guard mode (default 1), f 43;
#X text 238 394 - non-0 sets to index mode (default 0), f 43;
#X text 150 292 guard <float> - non-0 sets to guard mode, f 62;
#X text 150 307 index <float> - non-0 sets to index mode, f 62;
#N canvas 714 218 430 358 index 0;
#X obj 163 118 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 183 174 display~;
#X obj 166 95 hsl 128 15 0 514 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X text 29 16 By default \, [table~] is in normalized mode \, where
indexes are normalized from 0 to 1 \, but you can change that with
the third argument or the "index" message. When in index mode \, you
need to give [table~] the actual index number.;
#X obj 163 240 display~;
#X obj 163 211 tabread4~ \$0-table;
#X msg 93 116 guard \$1;
#X obj 93 97 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 1 1
;
#X obj 183 145 else/table~ \$0-table 0 1;
#X text 37 289 When in index mode \, if you set it to guard mode \,
it will behave exactly like [tabread4~] \, as it won't be able to read
the first or last point of the table.;
#X connect 0 0 5 0;
#X connect 0 0 8 0;
#X connect 2 0 0 0;
#X connect 5 0 4 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 8 0 1 0;
#X restore 493 228 pd index;
#N canvas 553 158 413 449 guard 0;
#X obj 115 193 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0.622047 256;
#X obj 115 259 display~;
#X obj 118 170 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 7900 1;
#X obj 115 229 else/table~ \$0-table 0;
#X msg 49 190 guard \$1;
#X obj 49 170 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X text 24 13 By default \, [table~] is in guard point mode \, where
it considers there are 3 extra points needed for the 4 point interpolation
(one at the beggining of the table and 2 at the end). In this case
\, it will not read the guard points and keep the indexes between them.f
;
#X text 24 75 You can set it no non guard point mode with the second
argument or the "guard 0" message. In this case \, when the interpolation
requires guard points out of the table (when reading the first index
of the table \, for example) \, it considers the non existing guard
points to be the same as the nearest value.;
#X text 30 380 That's why you get "0" when reaching the limits of the
table (0 and 1) - but you get other results when you're not n guard
mode. Because the index range changes a bit \, other values are also
a bit different., f 58;
#X obj 261 256 display~;
#X obj 261 229 tabosc4~ \$0-table;
#X text 30 305 In the example above \, [table] reads a table that was
generated with the "sinesum" method sent to an array. In this case
the guard points needed are created \, so when you are in guard point
mode \, you don't have access to them. It actually behaves exactly
like [tabosc4~] \, where a phase input of 1 also gets wrapped to 0!
;
#X connect 0 0 3 0;
#X connect 0 0 10 1;
#X connect 2 0 0 0;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 10 0 9 0;
#X restore 493 206 pd guard;
#X obj 490 72 else/setdsp~;
#X connect 23 0 30 0;
#X connect 29 0 23 0;
#X connect 30 0 27 0;
