#N canvas 591 30 561 480 10;
#X obj 3 278 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 3 354 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 3 390 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 129 363 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 130 286 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 3 441 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 -74965 -212593
-262144 1 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 -74965 -212593
0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 505 71 pd;
#X text 155 287 float/signal -;
#X text 252 288 frequency in hz;
#X obj 129 308 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 154 309 float/signal -;
#X obj 129 328 cnv 17 3 17 empty empty 2 5 9 0 16 -228856 -162280 0
;
#X text 190 329 signal -;
#X text 190 363 signal -;
#X text 174 399 1) float;
#X text 233 399 - frequency in hertz;
#X text 174 419 2) float;
#N canvas 504 64 800 509 sync 0;
#X obj 180 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 101 245 else/out~;
#X text 46 141 impulse value of 1 =>;
#X text 194 163 <== immediately jumps to the start of the cycle when
receiving an impulse.;
#X text 15 14 The third inlet expects an impulse signal for syncing.
The impulse values need to be > 0 and <= 1 (otherwise ignored) so the
internal phase jumps imediately to the given impulse value. Because
phase is cyclical \, the value of 1 represents the "phase 0" of the
cycle \, where the impulse occurs. Send it impulses and check the result
below.;
#X text 420 24 An impulse oscillator as the input forces hard sync
to the phase output.;
#X text 658 88 Master;
#X text 583 123 Slave;
#X obj 461 177 else/out~;
#X obj 560 62 nbx 5 14 110 200 0 0 empty empty empty 0 -8 0 10 -228856
-1 -1 110 256;
#X obj 615 291 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 101 353 Note that the "phase sync" inlet is quite different
from the "phase offset" inlet. This means that you will resset the
internal of the object \, but the offset still remains.;
#X msg 538 330 0;
#X msg 571 330 0.5;
#X text 102 401 In the example to the right \, even though the phase
sync forces the object to go to the initial phase "0" \, it still has
the initial offset of 0.5 as set via the 2nd argument. A further phase
offset change to "0" will push back half the cycle.;
#X obj 512 401 else/out~;
#X obj 180 142 else/trigate~;
#X obj 528 366 else/imp~ 1 0.5;
#X obj 615 315 else/trigate~;
#X obj 485 122 else/imp~ 200;
#X obj 560 88 else/imp~ 110;
#X obj 117 203 else/imp~ 1;
#X connect 0 0 16 0;
#X connect 9 0 20 0;
#X connect 10 0 18 0;
#X connect 12 0 17 1;
#X connect 13 0 17 1;
#X connect 16 0 21 2;
#X connect 17 0 15 0;
#X connect 17 0 15 1;
#X connect 18 0 17 2;
#X connect 19 0 8 0;
#X connect 19 0 8 1;
#X connect 20 0 19 2;
#X connect 21 0 1 0;
#X connect 21 0 1 1;
#X restore 494 242 pd sync;
#X obj 209 141 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 195 208 else/out~;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 1;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#N canvas 534 204 804 324 phase 0;
#X text 418 23 The phase values are wrapped into the 0-1 range \, since
the phase cycle is from 0 to 1 - where 1 is also the start of another
cycle.;
#X text 19 21 The second argument sets an initial phase (or "phase
offset"). This is also settable with the second inlet. In such a way
\, you have two objects with the same frequency falling out and back
in sync. Another feature is phase modulation.;
#X text 319 113 1;
#X obj 530 114 cnv 15 120 65 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 526 206 else/out~;
#X obj 579 125 osc~ 50.1;
#X text 532 96 Phase Modulation:;
#X obj 92 201 else/out~;
#X obj 181 113 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X floatatom 178 138 0 0 0 0 - - -;
#X text 159 113 0;
#X obj 62 137 else/imp~ 1 0;
#X obj 135 166 else/imp~ 1 0.5;
#X obj 542 153 else/imp~ 200;
#X connect 5 0 13 1;
#X connect 8 0 9 0;
#X connect 9 0 12 1;
#X connect 11 0 7 0;
#X connect 12 0 7 1;
#X connect 13 0 4 0;
#X connect 13 0 4 1;
#X restore 445 217 pd phase offset;
#X text 233 419 - initial phase offset;
#X text 251 310 phase offset (modulation input);
#X text 251 329 phase sync (ressets internal phase);
#X obj 23 40 cnv 4 4 4 empty empty Impulse 0 28 2 18 -233017 -1 0;
#X obj 90 40 cnv 4 4 4 empty empty oscillator 0 28 2 18 -233017 -1
0;
#X obj 3 4 cnv 15 301 42 empty empty imp~ 20 20 2 37 -233017 -1 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X text 63 89 The [imp~] object is an impulse oscillator that accepts
negative frequencies \, has inlets for phase modulation and phase sync.
;
#X text 268 139 <= hz;
#N canvas 793 162 437 372 example 0;
#X obj 95 133 else/sh~;
#X obj 95 88 noise~;
#X obj 95 216 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 -0.838501 256;
#N canvas 1046 306 123 217 snapshot~ 0;
#X obj 29 107 snapshot~;
#X obj 46 79 metro 100;
#X obj 46 53 loadbang;
#X obj 29 146 outlet;
#X obj 29 25 inlet~;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 4 0 0 0;
#X restore 95 186 pd snapshot~;
#X obj 213 113 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 216 88 hsl 128 15 -1 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X text 241 87 frequency;
#X text 23 22 [imp~] may be used as an oscillador but also to periodically
trigger processes such as with [sh~] below.;
#X obj 213 140 else/imp~ 1;
#X obj 213 178 else/out~;
#X text 31 267 Since it deals with negative frequencies \, the impulse
is only sent when leaping from one phase cycle to the next (in either
direction). How this happens is probably better understood if you check
the [pimp~] object and its help file - [pimp~] is a variant of [imp~]
which also carries an extra outlet for phase output.;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 8 0 0 1;
#X connect 8 0 9 0;
#X connect 8 0 9 1;
#X restore 476 192 pd example;
#X text 251 363 impulse signal;
#X obj 209 169 else/imp~ 1;
#X connect 18 0 40 0;
#X connect 40 0 19 0;
#X connect 40 0 19 1;
