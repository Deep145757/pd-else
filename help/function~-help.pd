#N canvas 669 111 560 426 10;
#X obj 2 4 cnv 15 301 42 empty empty function~ 20 20 2 37 -233017 -1
0;
#X obj 305 5 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 4 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 4 pd;
#X obj 344 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 22 41 cnv 4 4 4 empty empty Function 0 28 2 18 -233017 -1 0
;
#X obj 93 41 cnv 4 4 4 empty empty Generator 0 28 2 18 -233017 -1 0
;
#X obj 457 12 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 477 12 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 514 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 463 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 501 27 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#N canvas 408 150 524 469 waveform 0;
#X obj 111 319 else/out~;
#X obj 228 285 else/graph~ 441 10 1.015 -1.015;
#X msg 181 136 -1 0.5 1 0.5 -1;
#X msg 154 90 -1 1 1;
#X msg 168 112 1 1 -1;
#X obj 69 132 phasor~ 200;
#X obj 154 243 function~ 1 1 -1;
#X msg 188 164 -1 0.25 1 0.5 1 0.25 -1;
#X text 73 30 Here we use [function~] to generate waveforms and use
them as oscillators with a [phasor~] input.;
#X obj 69 110 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 201 88 sawtooth;
#X text 216 110 inverted sawtooth;
#X text 284 135 triangular wave;
#X text 338 164 trapezoid;
#X connect 2 0 6 0;
#X connect 3 0 6 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X connect 6 0 0 1;
#X connect 6 0 1 0;
#X connect 7 0 6 0;
#X connect 9 0 5 0;
#X restore 453 229 pd waveform;
#X obj 467 71 setdsp~ 1;
#X obj 1 400 cnv 15 552 21 empty \$0-pddp.cnv.footer empty 20 12 0
14 -228856 -66577 0;
#X obj 1 269 cnv 3 550 3 empty \$0-pddp.cnv.inlets inlets 8 12 0 13
-228856 -1 0;
#X obj 1 330 cnv 3 550 3 empty \$0-pddp.cnv.outlets outlets 8 12 0
13 -228856 -1 0;
#X obj 1 371 cnv 3 550 3 empty \$0-pddp.cnv.argument arguments 8 12
0 13 -228856 -1 0;
#X obj 110 279 cnv 17 3 40 empty \$0-pddp.cnv.let.0 0 5 9 0 16 -228856
-162280 0;
#X text 188 298 list;
#X text 140 280 float/signal;
#X obj 110 342 cnv 17 3 17 empty \$0-pddp.cnv.let.0 0 5 9 0 16 -228856
-162280 0;
#X text 176 343 signal;
#X text 226 343 - function output, f 35;
#X text 228 280 - values from 0 to 1 reads function;
#X text 136 379 1) list;
#X text 198 379 - 3 or more floats set function, f 40;
#X text 228 298 - 3 or more floats set function, f 35;
#X obj 191 201 else/function~ 1 1 -1;
#X obj 191 178 nbx 5 14 0 1 0 0 empty empty empty 0 -8 0 10 -228856
-1 -1 1 256;
#X obj 194 154 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 12700 1;
#X obj 191 231 else/display~ 8;
#X text 72 87 [function~] generates functions from arguments/list input.
Input values from 0 to 1 reads the function. It needs an odd number
of elements in a list \, staring with 3 values \, the syntax is (point1
\, period \, point2 \, period \, point3 \, etc...).;
#X connect 28 0 31 0;
#X connect 29 0 28 0;
#X connect 30 0 29 0;
