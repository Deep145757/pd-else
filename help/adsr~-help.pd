#N canvas 580 150 564 639 10;
#X obj 5 362 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 5 491 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 5 541 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 5 613 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 95 499 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 95 369 cnv 17 3 30 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 167 499 signal;
#X obj 24 41 cnv 4 4 4 empty empty Attack/Decay/Sustain/Release 0 28
2 18 -233017 -1 0;
#X obj 249 41 cnv 4 4 4 empty empty gated 0 28 2 18 -233017 -1 0;
#X obj 95 402 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 131 403 float/signal;
#X obj 135 300 else/out~;
#X obj 178 263 *~;
#X obj 246 268 vsl 18 80 0 1 0 0 ewtwet wefwert empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 246 241 else/sig2float~;
#X text 269 341 0;
#X text 269 264 1;
#X obj 3 4 cnv 15 301 42 empty empty adsr~ 20 20 2 37 -233017 -1 0
;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 3 4 graph;
#X text 131 369 float/signal;
#X text 226 402 - attack time in ms, f 43;
#X obj 95 423 cnv 17 3 17 empty empty 2 5 9 0 16 -228856 -162280 0
;
#X text 131 424 float/signal;
#X text 226 499 - envelope signal;
#X text 111 547 1) float - attack time in ms (default 0), f 61;
#X obj 193 161 tgl 20 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 299 41 cnv 4 4 4 empty empty envelope 0 28 2 18 -233017 -1 0
;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 4 pd;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X obj 115 218 osc~ 440;
#X text 227 369 - gate values, f 43;
#X obj 247 180 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 302 180 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 248 162 attack;
#N canvas 486 183 815 451 example 0;
#X obj 605 171 else/display~ 7;
#X obj 459 174 else/display~ 7;
#X text 665 174 <= gate value;
#X obj 459 220 else/sawtooth~;
#X obj 553 293 *~;
#X obj 510 375 else/out~;
#X obj 605 300 else/display~ 7;
#X obj 553 333 else/lowpass~ 0 20;
#X obj 605 272 else/rescale~ 100 1500;
#X text 667 303 <= cutoff;
#X text 521 178 <= Hz;
#X obj 605 102 else/randpulse~ 0.5;
#X obj 459 148 else/randf~ 50 150;
#X obj 605 214 else/adsr~ 100 300 0.7 100;
#X text 425 30 [adsr~] accepts any gate value \, positive or negative
and above 1 or below -1 \, so you can use it to control anything besides
amplitude.;
#X obj 285 382 out~;
#X obj 285 339 catch~ \$0-voice;
#X obj 328 143 clone;
#X text 262 144 see also:;
#X obj 100 230 keyboard 16 80 2 3;
#N canvas 622 284 477 340 voice1 0;
#X obj 125 33 inlet;
#X obj 230 99 / 127;
#X obj 395 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 395 223 switch~;
#X obj 125 95 mtof;
#X obj 253 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 39 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 253 179 else/sig2float~;
#X obj 128 278 throw~ \$0-voice;
#X obj 39 144 * 1.497;
#X obj 230 136 else/adsr~ 400 150 0.75 1000;
#X connect 0 0 10 0;
#X connect 1 0 14 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 12 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 7 0;
#X connect 13 0 8 0;
#X connect 14 0 3 1;
#X connect 14 0 4 1;
#X connect 14 0 11 0;
#X connect 14 1 2 0;
#X restore 100 400 pd voice1;
#N canvas 883 119 477 340 voice2 0;
#X obj 125 33 inlet;
#X obj 230 99 / 127;
#X obj 389 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 389 223 switch~;
#X obj 125 95 mtof;
#X obj 253 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 39 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 230 136 else/adsr~ 500 200 0.5 1000;
#X obj 253 179 else/sig2float~;
#X obj 128 278 throw~ \$0-voice;
#X obj 39 144 * 1.497;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 13 0;
#X connect 6 0 9 0;
#X connect 6 0 14 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 14 0 8 0;
#X restore 187 399 pd voice2;
#X obj 100 142 else/randi 48 72;
#X obj 100 167 display;
#X obj 100 97 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 100 119 else/tempo 60 100;
#X obj 100 200 makenote 127 750;
#X obj 100 333 else/voices 2 1;
#X text 26 15 Here we have [keyboard] displaying randomly generated
notes and driving a [voice] object with 2 voices. Also see that each
voice subpatch has [adsr~]'s status outlet to control the DSP status
for that subpatch - open and check it. You should also try pd's [clone]
object for managing polyphonic synths.;
#X obj 100 363 display;
#X obj 187 363 display;
#X connect 0 0 13 0;
#X connect 1 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 7 0;
#X connect 6 0 7 1;
#X connect 7 0 5 1;
#X connect 7 0 5 0;
#X connect 8 0 6 0;
#X connect 11 0 0 0;
#X connect 11 0 12 0;
#X connect 12 0 1 0;
#X connect 13 0 4 1;
#X connect 13 0 8 0;
#X connect 16 0 15 0;
#X connect 16 0 15 1;
#X connect 19 0 27 0;
#X connect 22 0 23 0;
#X connect 23 0 26 0;
#X connect 24 0 25 0;
#X connect 25 0 22 0;
#X connect 26 0 19 0;
#X connect 26 1 19 1;
#X connect 27 0 29 0;
#X connect 27 1 30 0;
#X connect 29 0 20 0;
#X connect 30 0 21 0;
#X restore 484 334 pd example;
#X obj 357 180 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 412 180 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 414 162 release;
#X text 304 162 decay;
#X text 358 162 sustain;
#X text 319 304 see also:;
#X obj 328 323 else/asr~;
#X obj 95 445 cnv 17 3 17 empty empty 3 5 9 0 16 -228856 -162280 0
;
#X text 131 446 float/signal;
#X obj 95 467 cnv 17 3 17 empty empty 4 5 9 0 16 -228856 -162280 0
;
#X text 131 468 float/signal;
#X text 226 467 - release time in ms, f 43;
#X text 111 594 4) float - release time in ms (default 0), f 61;
#X text 111 562 2) float - decay time in ms (default 0), f 61;
#X text 226 423 - decay time in ms, f 43;
#X text 226 445 - sustain amplitude (ratio to gate value), f 43;
#X text 111 578 3) float - sustain amplitude ratio to gate value (default
0), f 61;
#X text 160 163 gate;
#N canvas 786 244 383 359 triggered 0;
#X obj 108 271 else/out~;
#X obj 166 71 tgl 20 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X obj 151 229 *~;
#X obj 84 169 else/brown~;
#X text 193 169 <= gate value;
#X obj 166 201 else/adsr~ 50 100 0.5 500;
#X obj 166 100 else/tempo~ 60;
#X obj 166 137 else/timed.gate~ 500;
#X text 28 17 You can use the [timed.gate~] object to create a timed
gate so you can trigger the envelope with an impulse., f 54;
#X obj 166 166 else/display~ 2;
#X text 104 118 impulse =>;
#X connect 1 0 6 0;
#X connect 2 0 0 0;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 5 0 2 1;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 9 0 5 0;
#X restore 466 301 pd triggered \; by impulses;
#X obj 412 233 tgl 18 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 412 260 else/display;
#X obj 95 520 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 174 520 float;
#N canvas 789 187 414 411 status 0;
#X obj 288 306 switch~;
#X obj 288 238 tgl 50 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 114 266 *~;
#X obj 49 204 osc~ 440;
#X obj 181 254 else/sig2float~;
#X obj 181 290 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 335 127 else/setdsp~;
#X obj 129 202 else/adsr~ 100 300 0.25 500;
#X msg 129 142 0.25;
#X msg 143 169 0;
#X text 162 141 gate on;
#X text 171 168 gate off;
#X text 19 16 [adsr~] has a right outlet that sends a status value
(1 when the envelope starts and 0 when it ends). This can be useful
for different things \, but particularly to turn on and off the DSP
processing of a subpatch or abstraction with [switch~]., f 62;
#X text 19 67 In the case of turning [switch~] on or off \, this only
works for control data input \, because if the audio engine is off
you can't use it to turn it on., f 62;
#X obj 71 311 else/out~;
#X connect 1 0 0 0;
#X connect 2 0 14 0;
#X connect 2 0 14 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 7 0 2 1;
#X connect 7 0 4 0;
#X connect 7 1 1 0;
#X connect 8 0 7 0;
#X connect 9 0 7 0;
#X restore 490 258 pd status;
#X text 226 520 - envelope status (on: 1 / off: 0);
#X obj 193 208 else/adsr~ 1000 500 0.5 1000, f 37;
#X text 179 383 bang;
#X text 227 383 - trigger/retrigger, f 43;
#N canvas 703 228 414 411 retrigger 0;
#X obj 115 253 *~;
#X obj 50 191 osc~ 440;
#X obj 192 241 else/sig2float~;
#X obj 192 277 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 4950 1;
#X obj 332 275 else/setdsp~;
#X obj 130 189 else/adsr~ 100 300 0.25 500;
#X obj 130 146 tgl 20 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X obj 99 118 bng 20 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 72 303 else/out~;
#X msg 130 119 1;
#X text 159 117 <= click multiple times;
#X text 19 16 You can retrigger the envelope with a bang or with a
float value. With float values you don't need to turn the gate off
before retriggering the envelope \, so even repeated values make the
envelope restart the attack ramp.;
#X text 19 66 A bang considers the last non zero value as the gate
value \, and the default value is "1"!, f 60;
#X connect 0 0 8 0;
#X connect 0 0 8 1;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 5 0 0 1;
#X connect 5 0 2 0;
#X connect 6 0 5 0;
#X connect 7 0 5 0;
#X connect 9 0 6 0;
#X restore 472 279 pd retrigger;
#X text 68 88 [adsr~] is a linear attack/decay/sustain/release gated
envelope. At a gate on value (transition from 0 to any value) \, the
attack ramp is generated \, then a decay ramp goes to the sustain point
(specified as a ratio of the gate value). A gate off (transition from
any value to 0) makes [adsr~] go to 0 at the specified release time
in ms., f 68;
#X obj 193 186 sig~;
#X connect 12 0 11 0;
#X connect 12 0 11 1;
#X connect 14 0 13 0;
#X connect 25 0 71 0;
#X connect 35 0 12 0;
#X connect 37 0 66 1;
#X connect 38 0 66 2;
#X connect 41 0 66 3;
#X connect 42 0 66 4;
#X connect 60 0 61 0;
#X connect 66 0 12 1;
#X connect 66 0 14 0;
#X connect 66 1 60 0;
#X connect 71 0 66 0;
