#N canvas 565 39 565 565 10;
#X obj 5 532 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 5 319 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 5 413 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 5 444 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 88 328 cnv 17 3 78 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 138 327 signal;
#X obj 88 422 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 138 422 signal;
#X text 102 344 set <symbol>;
#X text 187 343 - sets the array/table to be used for lookup;
#X text 187 326 - signal to be used as index;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 4 pd;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 25 41 cnv 4 4 4 empty empty Waveshaper 0 28 2 18 -233017 -1
0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X obj 3 4 cnv 15 301 42 empty empty shaper~ 20 20 2 37 -233017 -1
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 4 graph;
#X obj 96 205 cnv 15 118 78 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-clip 512 float 1;
#A 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -0.96875
-0.9375 -0.90625 -0.875 -0.84375 -0.8125 -0.78125 -0.75 -0.71875 -0.6875
-0.65625 -0.625 -0.59375 -0.5625 -0.53125 -0.5 -0.46875 -0.4375 -0.40625
-0.375 -0.34375 -0.3125 -0.28125 -0.25 -0.21875 -0.1875 -0.15625 -0.125
-0.09375 -0.0625 -0.03125 0 0.03125 0.0625 0.09375 0.125 0.15625 0.1875
0.21875 0.25 0.28125 0.3125 0.34375 0.375 0.40625 0.4375 0.46875 0.5
0.53125 0.5625 0.59375 0.625 0.65625 0.6875 0.71875 0.75 0.78125 0.8125
0.84375 0.875 0.90625 0.9375 0.96875 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1;
#X coords 0 1.05 511 -1.05 120 80 1 0 0;
#X restore 95 204 graph;
#X text 90 286 0;
#X text 201 286 511;
#X text 75 272 -1;
#X text 80 199 1;
#X obj 282 187 else/player~ violin.wav 1 1;
#X obj 282 253 else/out~;
#N canvas 446 119 741 372 waveshaping 0;
#X obj 61 92 cnv 15 248 148 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-t_func 4099 float 0;
#X coords 0 1 4098 -1 250 150 1 0 0;
#X restore 60 91 graph;
#X obj 410 101 *~;
#X obj 489 47 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0.1 256;
#X obj 492 26 hsl 128 15 0.1 1 0 1 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X text 523 26 Amplitude;
#X obj 482 204 else/graph~ 512 14;
#X obj 367 238 else/out~;
#X obj 489 68 else/float2sig~ 50;
#X obj 410 51 osc~ 110;
#X text 21 26 Here's an example of waveshaping with a given transfer
function \, but on a sine wave as a synthesis technique.;
#X text 568 106 using the "set" message to set an array, f 15;
#X obj 133 250 else/initmess \; \$0-t_func sinesum 4096 1 0.5 1 0.3
0.2 0.9 \, normalize, f 29;
#X obj 474 111 else/initmess set \$0-t_func, f 14;
#X obj 410 160 else/shaper~;
#X connect 2 0 14 0;
#X connect 3 0 8 0;
#X connect 4 0 3 0;
#X connect 8 0 2 1;
#X connect 9 0 2 0;
#X connect 13 0 14 0;
#X connect 14 0 6 0;
#X connect 14 0 7 0;
#X connect 14 0 7 1;
#X restore 458 240 pd waveshaping;
#N canvas 806 221 446 245 more 0;
#X obj 69 91 osc~ 0.075;
#X text 29 21 [shaper~] also allows other functionalities besides waveshaping.
For example \, an LFO sine wave can scan through an audio sample forward
and reverse \, accelerating and decelerating \, resulting in a turntable
scratch effect. Check below., f 65;
#X obj 220 166 soundfiler;
#X obj 220 130 else/initmess read -resize violin.wav \$0-violin, f
26;
#X obj 294 167 table \$0-violin;
#X obj 69 160 else/out~;
#X obj 69 125 ./shaper~ \$0-violin;
#X connect 0 0 6 0;
#X connect 3 0 2 0;
#X connect 6 0 5 0;
#X connect 6 0 5 1;
#X restore 500 282 pd more;
#X text 70 87 [shaper~] performs waveshaping with transfer functions
\, in which signal input values (from -1 to 1) are mapped to the the
transfer function's indexes. Values outside the -1 to 1 range are wrapped
inside it., f 65;
#X text 70 134 You can set an array for [shaper~] \, as in this example
\, or use its internal transfer function for chebyshev polinomials.
, f 65;
#X text 150 360 list;
#X text 114 375 dc <float>;
#X text 187 374 - sets DC offset for internal transfer function;
#X text 102 390 norm <float>;
#X text 187 389 - sets normalization for internal funcion on <1> or
off <0>;
#X text 187 449 -;
#X text 108 449 1) anything;
#X text 199 449 a symbol sets array/table name to be used for lookup
\, but a list of floats sets harmonic weigths for internal transfer
function (default 1)., f 55;
#X obj 5 491 cnv 3 550 3 empty empty flags 8 12 0 13 -228856 -1 0;
#X text 143 498 -dc: sets DC offset for internal transfer function
(default 0), f 62;
#X text 83 513 -norm <float>:;
#X text 173 513 sets normalization on <1> (default) or off <0>, f
57;
#N canvas 408 87 928 504 chebyshev 0;
#X text 22 14 If you don't give [shaper~] an array with a transfer
function \, it uses an internal one by default. This internal transfer
function represents a summation of chebyshev polinomials., f 70;
#X text 22 51 You can give a list of coefficients for each nth order
polinomial. For a sine wave input \, these represent the amplitudes
for the harmonics generated by the transfer function \, starting with
the fundamental., f 70;
#X text 22 89 By default \, [shaper~] loads a transfer function with
the argument "1" \, which is the first order polinomial \, which is
just a linear function. Hence \, it represents the fundamental., f
70;
#X obj 58 205 osc~ 200;
#X obj 194 326 else/graph~ 441 8;
#X obj 85 359 out~;
#X msg 143 214 1 1;
#X msg 127 189 1;
#X obj 128 296 else/shaper~;
#X text 154 189 fundamental;
#X text 171 213 fundamental and 1st harmonic;
#X msg 155 246 0.5 1;
#X msg 212 261 norm \$1;
#X obj 212 241 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X text 22 129 The list of coefficients can be given as an argumnent
or as a list input. The object \, by default \, normalizes the transfer
fucntion to output values between -1 and 1 \, but you can change that
with the "norm" message or flag., f 70;
#X text 471 12 For non normalized outputs \, you can also set a DC
value \, or 0th order polinomoal. This can also be set for a normalized
function \, but doesn't affect it., f 70;
#X text 471 51 you can set the DC offset with the "dc" message or flag.
, f 70;
#X connect 3 0 8 0;
#X connect 6 0 8 0;
#X connect 7 0 8 0;
#X connect 8 0 4 0;
#X connect 8 0 5 1;
#X connect 8 0 5 0;
#X connect 11 0 8 0;
#X connect 12 0 8 0;
#X connect 13 0 12 0;
#X restore 470 261 pd chebyshev;
#X text 187 359 - harmonic weigths for internal transfer function;
#X text 187 422 - ouput of transfer function (waveshaping);
#X obj 282 217 else/shaper~ \$0-clip;
#X connect 28 0 49 0;
#X connect 49 0 29 0;
#X connect 49 0 29 1;
