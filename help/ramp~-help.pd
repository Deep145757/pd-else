#N canvas 582 53 560 680 10;
#X obj 4 277 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 4 472 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 3 502 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 3 641 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 77 479 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 77 285 cnv 17 3 116 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 134 282 signal;
#X obj 2 3 cnv 15 301 42 empty empty ramp~ 20 20 2 37 -233017 -1 0
;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 23 40 cnv 4 4 4 empty empty Resettable 0 28 2 18 -233017 -1
0;
#X obj 107 40 cnv 4 4 4 empty empty ramp 0 28 2 18 -233017 -1 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 194 145 else/imp~ 1;
#X obj 194 227 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 12747 256;
#X obj 194 201 else/sig2float~;
#X obj 197 250 hsl 128 15 0 44100 0 0 empty empty empty -2 -8 0 10
-228856 -1 -1 3671 1;
#X obj 163 146 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 134 479 signal;
#X text 146 297 bang;
#X text 176 329 - sets the reset point value, f 59;
#X obj 77 406 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 98 407 float/signal;
#X obj 77 428 cnv 17 3 17 empty empty 2 5 9 0 16 -228856 -162280 0
;
#X text 98 429 float/signal;
#X obj 77 449 cnv 17 3 17 empty empty 3 5 9 0 16 -228856 -162280 0
;
#X text 98 451 float/signal;
#X text 176 479 - the ramp signal, f 59;
#N canvas 864 143 428 508 frequency 0;
#X obj 93 168 /~;
#X obj 74 265 expr~ sin($v1);
#X obj 74 226 else/ramp~;
#X obj 93 196 *~;
#X obj 108 138 else/sr~;
#X obj 131 172 else/pi 2;
#X obj 31 355 else/out~;
#X obj 93 109 sig~ 440;
#X text 149 109 Hertz;
#X text 163 139 sample rate;
#X text 193 173 max = 2*pi;
#X text 24 22 If one wants [ramp~] to output a signal with frequency
in hertz (oscillating between min and max values) \, then the increment
value should be (max - min) * freq / sr (where freq is the frequency
in hz and sr is the sampling rate).;
#X obj 145 309 else/graph~ 442;
#X text 164 228 (Having an oscillator the hard way);
#X connect 0 0 3 0;
#X connect 1 0 6 1;
#X connect 1 0 6 0;
#X connect 1 0 12 0;
#X connect 2 0 1 0;
#X connect 3 0 2 1;
#X connect 4 0 0 1;
#X connect 5 0 2 3;
#X connect 5 0 3 1;
#X connect 7 0 0 0;
#X restore 469 248 pd frequency;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 -74965 -212593
-262144 1 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 -74965 -212593
0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 505 61 pd;
#X text 176 407 - sets the increment value (default 1), f 59;
#X text 176 429 - sets the minimum value (default 0), f 59;
#X text 176 451 - sets the maximum value (default 2ˆ32 - 1), f 59
;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 -74965 -212593
-262144 1 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 -74965 -212593
0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 505 61 pd;
#X text 123 509 1) float;
#X text 123 526 2) float;
#X text 123 542 3) float;
#X text 123 558 4) float;
#X text 177 509 - increment value (default 1), f 59;
#X text 177 525 - minimum value (default 0), f 59;
#X text 177 541 - maximum value (default 2ˆ32 - 1), f 59;
#X text 177 557 - start/reset value (default 0), f 59;
#N canvas 242 23 501 678 read 0;
#X obj 284 195 soundfiler;
#X floatatom 284 222 0 0 0 0 - - -;
#X obj 284 141 symbol \$0-sample;
#X obj 284 116 loadbang;
#X text 374 248 sample size;
#X msg 284 170 read -resize ./vacuous.wav \$1;
#X obj 371 199 table \$0-sample;
#X text 42 19 [ramp~] is very convenient for driving [tabread4~] to
read samples at different speeds. With an increment of "1" \, it reads
at the original speed \, at "2" it reads twice as fast \, "0.5" half
as fast. Note it can also play it backwards at different speeds with
negative increment values., f 69;
#X text 51 345 The [ramp~] object loops automatically \, you can set
different loop points and a reset/restart value outside the loop.,
f 69;
#X obj 100 588 else/out~;
#X obj 128 547 tabread4~ \$0-sample;
#X obj 128 482 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 74 483 restart;
#X obj 69 268 else/out~;
#X obj 97 227 tabread4~ \$0-sample;
#X obj 129 106 hsl 128 15 -2 2 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 126 160 else/float2sig~ 100 1;
#X obj 126 132 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 97 132 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X text 45 132 restart;
#X obj 97 191 else/ramp~, f 15;
#X obj 137 392 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 137 413 select 0 1;
#X msg 165 481 mode 0;
#X obj 284 246 value \$0-size;
#X obj 284 476 value \$0-size;
#X msg 214 481 mode 1;
#X obj 128 511 else/ramp~ 1 10000 50000;
#X msg 269 446 50000;
#X text 222 391 implementing "else/susloop~";
#X text 157 391 loop;
#X connect 0 0 1 0;
#X connect 1 0 20 3;
#X connect 1 0 24 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 5 0 0 0;
#X connect 10 0 9 0;
#X connect 10 0 9 1;
#X connect 11 0 27 0;
#X connect 14 0 13 0;
#X connect 14 0 13 1;
#X connect 15 0 17 0;
#X connect 16 0 20 1;
#X connect 17 0 16 0;
#X connect 18 0 20 0;
#X connect 20 0 14 0;
#X connect 21 0 22 0;
#X connect 22 0 25 0;
#X connect 22 0 26 0;
#X connect 22 1 23 0;
#X connect 22 1 11 0;
#X connect 22 1 28 0;
#X connect 23 0 27 0;
#X connect 25 0 27 3;
#X connect 26 0 27 0;
#X connect 27 0 10 0;
#X connect 28 0 27 3;
#X restore 451 225 pd read buffers;
#X text 140 313 float;
#X text 176 313 - jump to the float's value, f 59;
#X text 146 358 stop;
#X text 140 374 start;
#X text 104 329 set <float>;
#X text 176 390 - stops and goes back to the reset point, f 59;
#X text 140 390 reset;
#X text 176 358 - stops incrementing, f 59;
#X text 176 374 - (re)starts incrementing, f 59;
#N canvas 123 65 1123 536 examples-1 0;
#X obj 82 262 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 68.1719 256;
#X obj 82 233 else/sig2float~;
#X obj 82 297 vsl 15 128 0 127 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 6817 1;
#X obj 82 174 bng 16 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 490 186 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 490 157 else/sig2float~;
#X obj 490 221 vsl 15 128 -1 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 6350 1;
#X obj 490 97 bng 16 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X text 511 246 0.5;
#X text 509 213 1;
#X text 510 309 0.5;
#X text 511 278 0;
#X text 511 342 -1;
#X text 64 419 0;
#X text 52 289 127;
#X text 46 352 63.5;
#X msg 150 162 0.001, f 6;
#X msg 137 134 -0.001;
#X text 38 31 Below \, we have [ramp~] loaded with the following parameters:
, f 49;
#X text 204 149 <= change direction;
#X obj 82 201 else/ramp~ -0.001 0 127 63.5;
#X text 37 64 increment = -0.001 / minimum = 0 / maximum = 127 / reset
value = 63.5 (also the initial/staring value)., f 52;
#X text 31 174 restart;
#X text 158 304 Note that the ramp is in loop mode by default \, where
it automatically wraps between the min and max values. You can set
it to clip mode with the "-clip" flag and change between modes with
the "clip" and "loop" messages (as the example on the right)., f 46
;
#X text 399 97 start/restart;
#X text 158 393 Also \, by default \, [ramp~] automatically starts
at loading the patch. You can change that with the -off flag (also
see the example on the right)., f 46;
#X text 389 25 You can have a resset point outside the minimum and
maximum range. Below \, the value is resset to -1 \, but it wraps around
when it falls within the min/max range (when in loop mode).;
#X msg 783 316 mode \$1;
#X obj 783 245 vradio 15 1 0 3 empty empty empty 0 -8 0 10 -228856
-1 -1 0;
#X floatatom 783 296 2 0 0 0 - - -, f 2;
#X text 801 261 clip;
#X text 801 244 reset;
#X text 801 277 loop (default);
#X text 677 259 change modes ==>;
#X obj 673 388 else/sig2float~;
#X obj 673 328 bng 16 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 676 419 hsl 128 15 0 88200 0 0 empty empty empty -2 -8 0 10
-228856 -1 -1 8185 1;
#X obj 673 356 else/ramp~ 1 0 88200;
#X text 603 174 You can change to "clip" mode \, where it'll clip (or
"stop") at the min/max boundaries and also "reset" mode \, wehre it'll
reset back to the reset point and stop when reaching the limits.;
#X text 622 328 restart;
#X obj 490 125 else/ramp~ 2e-05 -0.5 0.5 -1 -mode 1 -off;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 3 0 20 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 7 0 40 0;
#X connect 16 0 20 1;
#X connect 17 0 20 1;
#X connect 20 0 1 0;
#X connect 27 0 37 0;
#X connect 28 0 29 0;
#X connect 29 0 27 0;
#X connect 34 0 36 0;
#X connect 35 0 37 0;
#X connect 37 0 34 0;
#X connect 40 0 5 0;
#X restore 463 178 pd examples-1;
#N canvas 206 23 810 385 examples-2 0;
#X obj 539 282 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 94.8675 256;
#X obj 539 253 else/sig2float~;
#X obj 588 151 *~;
#X obj 539 221 else/ramp~ 0.001 0 127 63;
#X obj 628 150 else/pulse~ 1;
#X text 534 326 0;
#X text 660 326 127;
#X text 591 326 63.5;
#X obj 542 309 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 9487 1;
#X obj 628 178 else/togedge~;
#X text 433 36 This examples uses a [*~] start and stop the ramp increment.
This allows you to stop and start with sample accuracy. Additionally
\, we use [togedge~] to stop and reset the ramp as in the "reset" message
\, but sample accurately.;
#X obj 588 117 sig~ 0.0025;
#X text 25 21 The "start" and "stop" messages starts and stops incrementing.
The "reset" message stops and goes back to the reset point. The "set"
message sets the reset value and a float input makes [ramp~] jump to
that value., f 62;
#X obj 154 273 else/sig2float~;
#X msg 170 149 start;
#X msg 186 173 stop;
#X msg 154 121 reset;
#X obj 154 302 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 63.5 256;
#X text 149 346 0;
#X text 275 346 127;
#X text 206 346 63.5;
#X obj 157 329 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 6350 1;
#X obj 311 185 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 314 160 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X msg 236 181 set \$1;
#X obj 236 155 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 239 130 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X text 240 111 change reset value;
#X text 373 185 set value;
#X obj 128 183 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 49 178 start from reset value, f 11;
#X obj 154 241 else/ramp~ 0.001 0 127 63.5 -off;
#X text 77 101 tops and goes back to the reset point, f 13;
#X connect 0 0 8 0;
#X connect 1 0 0 0;
#X connect 2 0 3 1;
#X connect 3 0 1 0;
#X connect 4 0 2 1;
#X connect 4 0 9 0;
#X connect 9 1 3 0;
#X connect 11 0 2 0;
#X connect 13 0 17 0;
#X connect 14 0 31 0;
#X connect 15 0 31 0;
#X connect 16 0 31 0;
#X connect 17 0 21 0;
#X connect 22 0 31 0;
#X connect 23 0 22 0;
#X connect 24 0 31 0;
#X connect 25 0 24 0;
#X connect 26 0 25 0;
#X connect 29 0 31 0;
#X connect 31 0 13 0;
#X restore 463 202 pd examples-2;
#X text 61 85 [ramp~] is a resettable linear ramp between a minimum
and maximum value. You can trigger it with a bang or with a trigger
signal (non-positive to positive transition)., f 55;
#X text 273 145 trigger via bang or signal;
#X obj 4 598 cnv 3 550 3 empty empty flags 8 12 0 13 -228856 -1 0;
#X text 176 621 - prevents the ramp from automatically starting, f
61;
#X text 176 282 - signal trigger: starts ramp from the reset point
value, f 59;
#X text 176 297 - control trigger: starts ramp from the reset point
value, f 59;
#X text 144 621 -off;
#X text 98 345 mode <float>;
#X text 90 605 -mode <float>;
#X text 176 345 - sets mode to "loop" <0> \, "clip" <1> or "reset"
<2>, f 59;
#X text 176 605 - sets mode: "loop" <0> (default) \, "clip" <1> or
"reset" <2>, f 61;
#X obj 194 174 else/ramp~;
#X text 123 574 5) float;
#X text 177 573 - mode: 0 (loop) \, 1 (clip) or 2 (reset) - default
0), f 59;
#X connect 17 0 69 0;
#X connect 18 0 20 0;
#X connect 19 0 18 0;
#X connect 21 0 69 0;
#X connect 69 0 19 0;
