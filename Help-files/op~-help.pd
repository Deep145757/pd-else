#N canvas 451 65 561 448 10;
#X obj 4 261 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 4 340 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 4 372 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 4 422 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 307 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 306 3 pd;
#X obj 346 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 22 40 cnv 4 4 4 empty empty Signal 0 28 2 18 -233017 -1 0;
#X obj 459 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 479 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 516 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 465 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 503 26 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X obj 4 4 cnv 15 301 42 empty empty op~ 20 20 2 37 -233017 -1 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 4 graph;
#X obj 77 40 cnv 4 4 4 empty empty operator 0 28 2 18 -233017 -1 0
;
#X obj 116 348 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 117 270 cnv 17 3 33 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 149 349 signal - dsp status: 1 (for on) or 0 (for off);
#X text 173 288 <symbol> - operator type (> \, < \, >= \, <= \, ==
or !=), f 51;
#X text 137 384 1) symbol - operator type: > (default) \, < \, >= \,
<= \, == or !=;
#X text 137 399 2) float;
#X obj 116 309 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 185 271 signal - input to operator, f 49;
#X obj 267 158 sig~ 5;
#X obj 267 131 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 267 222 else/display~;
#X obj 491 70 else/setdsp~;
#X obj 267 190 else/op~ == 5;
#N canvas 277 170 970 391 operators 0;
#X obj 46 315 display~;
#X obj 46 252 sig~ 5;
#X obj 46 282 op~ == 5;
#X floatatom 46 226 5 0 0 0 - - -;
#X obj 127 315 display~;
#X obj 127 252 sig~ 5;
#X floatatom 127 226 5 0 0 0 - - -;
#X obj 127 282 op~ != 5;
#X obj 46 149 display~;
#X obj 46 86 sig~ 5;
#X floatatom 46 60 5 0 0 0 - - -;
#X obj 46 116 op~ > 5;
#X text 38 34 greater than;
#X obj 148 149 display~;
#X obj 148 86 sig~ 5;
#X floatatom 148 60 5 0 0 0 - - -;
#X text 140 34 less than;
#X obj 148 116 op~ < 5;
#X obj 241 149 display~;
#X obj 241 86 sig~ 5;
#X floatatom 241 60 5 0 0 0 - - -;
#X text 233 28 greater than;
#X obj 343 149 display~;
#X obj 343 86 sig~ 5;
#X floatatom 343 60 5 0 0 0 - - -;
#X text 335 28 less than;
#X text 233 40 or equal to;
#X text 334 40 or equal to;
#X obj 241 116 op~ >= 5;
#X obj 343 116 op~ <= 5;
#X text 37 200 equal to;
#X text 119 200 not equal to;
#X obj 792 55 else/setdsp~;
#X obj 236 315 display~;
#X floatatom 236 226 5 0 0 0 - - -;
#X obj 337 315 display~;
#X floatatom 337 226 5 0 0 0 - - -;
#X text 227 200 logical and;
#X text 329 200 logical or;
#X obj 236 282 op~ && 1;
#X obj 236 252 sig~ 1;
#X obj 337 252 sig~ 0;
#X obj 337 282 op~ || 1;
#X obj 515 142 display~;
#X obj 515 79 sig~ 5;
#X floatatom 515 53 5 0 0 0 - - -;
#X obj 515 109 op~ & 3;
#X text 507 27 bitwise and;
#X obj 623 141 display~;
#X obj 623 78 sig~ 5;
#X floatatom 623 52 5 0 0 0 - - -;
#X obj 623 108 op~ & 3;
#X text 615 26 bitwise or;
#X obj 515 314 display~;
#X obj 515 251 sig~ 5;
#X floatatom 515 225 5 0 0 0 - - -;
#X obj 627 313 display~;
#X obj 627 250 sig~ 5;
#X floatatom 627 224 5 0 0 0 - - -;
#X text 507 194 bitwise not;
#X obj 515 281 op~ ~;
#X text 615 190 bitwise exclusive or, f 12;
#X obj 627 280 op~ ^ 3;
#X obj 737 315 display~;
#X obj 737 252 sig~ 5;
#X floatatom 737 226 5 0 0 0 - - -;
#X obj 849 314 display~;
#X floatatom 849 225 5 0 0 0 - - -;
#X text 728 193 bitwise shift left, f 11;
#X obj 737 282 op~ << 4;
#X obj 849 281 op~ >> 3;
#X obj 849 251 sig~ 15;
#X text 837 191 bitwise shift right, f 11;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 1 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X connect 11 0 8 0;
#X connect 14 0 17 0;
#X connect 15 0 14 0;
#X connect 17 0 13 0;
#X connect 19 0 28 0;
#X connect 20 0 19 0;
#X connect 23 0 29 0;
#X connect 24 0 23 0;
#X connect 28 0 18 0;
#X connect 29 0 22 0;
#X connect 34 0 40 0;
#X connect 36 0 41 0;
#X connect 39 0 33 0;
#X connect 40 0 39 0;
#X connect 41 0 42 0;
#X connect 42 0 35 0;
#X connect 44 0 46 0;
#X connect 45 0 44 0;
#X connect 46 0 43 0;
#X connect 49 0 51 0;
#X connect 50 0 49 0;
#X connect 51 0 48 0;
#X connect 54 0 60 0;
#X connect 55 0 54 0;
#X connect 57 0 62 0;
#X connect 58 0 57 0;
#X connect 60 0 53 0;
#X connect 62 0 56 0;
#X connect 64 0 69 0;
#X connect 65 0 64 0;
#X connect 67 0 71 0;
#X connect 69 0 63 0;
#X connect 70 0 66 0;
#X connect 71 0 70 0;
#X restore 451 219 pd operators;
#X msg 225 158 <;
#X msg 195 158 <=;
#X msg 166 158 >;
#X msg 136 158 >=;
#X msg 106 158 ==;
#X msg 75 158 !=;
#X msg 16 158 &&;
#X msg 46 158 ||;
#X msg 409 160 ^;
#X msg 320 160 &;
#X msg 349 160 |;
#X msg 380 160 ~;
#X msg 440 160 >>;
#X msg 469 160 <<;
#X text 51 87 [op~] is a signal operator (comparison and bitwise).
The operator is defined by the first argument. This is more efficient
than using [expr~]., f 66;
#X text 149 310 float/signal - secondary operator value (ignored for
bitnot);
#X text 197 399 - inlet value (default 0) - ignored for bitnot;
#X connect 24 0 28 0;
#X connect 25 0 24 0;
#X connect 28 0 26 0;
#X connect 30 0 28 0;
#X connect 31 0 28 0;
#X connect 32 0 28 0;
#X connect 33 0 28 0;
#X connect 34 0 28 0;
#X connect 35 0 28 0;
#X connect 36 0 28 0;
#X connect 37 0 28 0;
#X connect 38 0 28 0;
#X connect 39 0 28 0;
#X connect 40 0 28 0;
#X connect 41 0 28 0;
#X connect 42 0 28 0;
#X connect 43 0 28 0;
