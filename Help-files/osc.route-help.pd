#N struct 1016-point float x0 float y0 float xs float ys float fg float in float gridx float gridy;
#N canvas 521 52 560 459 10;
#X obj 4 301 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 336 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 401 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 106 345 cnv 17 3 17 empty empty n 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 107 310 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 433 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty Route\ OSC\ messages 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 3 cnv 15 301 42 empty empty osc.route 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#X text 21 212 see also:;
#X text 151 346 anything;
#X obj 18 234 else/osc.receive;
#N canvas 654 157 561 452 basic 0;
#X obj 27 20 else/slider2d 100 100 0 127 0 127 1 200 200 200 0 0 0 0 0 0 0 0 empty empty;
#X msg 27 143 /slider/2d \$1 \$2;
#X msg 55 216 /slider/amplitude/a \$1;
#X msg 75 281 /slider/amplitude/b \$1;
#X obj 29 382 else/osc.send localhost 8002;
#X obj 261 168 else/osc.receive 8002;
#X obj 261 239 else/osc.route /slider;
#X obj 261 280 else/osc.route /amplitude;
#X obj 408 306 else/display;
#X obj 261 203 else/display;
#X text 203 21 Addresses are specified with the "/" separator and [osc.route] is able to break this message and route them. Note how the '/slider' address matches input messages that start with '/slider' but have further sub addresses with following "/"., f 51;
#X obj 261 310 route float;
#X obj 324 340 else/display;
#X obj 58 188 hsl 136 16 0 1 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 78 253 hsl 136 16 0 1 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 90 317 hsl 136 16 0 1 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 87 345 /slider/amplitude \$1;
#X obj 261 340 else/display 5;
#X obj 324 373 route /a /b, f 17;
#X obj 324 400 else/display 5;
#X obj 373 400 else/display 5;
#X text 221 89 Other [osc.route] objects can be used in cascade to deal with further addresses. If no further sub address is given \, [route] can also do the same job by the way!, f 48;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 5 0 9 0;
#X connect 6 0 7 0;
#X connect 7 0 11 0;
#X connect 7 1 8 0;
#X connect 9 0 6 0;
#X connect 11 0 17 0;
#X connect 11 1 12 0;
#X connect 12 0 18 0;
#X connect 13 0 2 0;
#X connect 14 0 3 0;
#X connect 15 0 16 0;
#X connect 16 0 4 0;
#X connect 18 0 19 0;
#X connect 18 1 20 0;
#X restore 490 235 pd basic;
#X text 151 311 anything;
#X text 209 311 - messages to be routed;
#X text 209 347 - routed messages that correspond to an argument;
#X obj 106 369 cnv 17 3 17 empty empty n+1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 151 369 anything;
#X text 209 370 - unmatched message;
#X text 123 412 1) anything -;
#X text 209 412 list of OSC adrresses to route to;
#X msg 199 163 /hz/a 440;
#X msg 212 185 /hz/b 880;
#X obj 199 235 else/osc.route /hz;
#X obj 199 259 else/display;
#X obj 304 259 else/display;
#X msg 142 163 /hz 220;
#X text 43 88 [osc.route] routes OSC messages received from [osc.receive]. It follows the same logic as Vanilla's [route] where arguments set the number of outlets and an extra is created for no matches. The difference is that it manages OSC addresses instead \, specified with the "/" separator. Note how the '/hz' address matches input messages that start with '/hz' even if it has further sub addresses., f 80;
#X msg 223 209 /unmatch value;
#N canvas 647 184 544 431 more 0;
#X msg 166 193 1 2 3;
#X obj 98 376 else/display;
#X obj 156 343 else/display;
#X obj 214 343 else/display;
#X msg 98 66 /one/two/three 4!;
#X msg 123 91 /* bang!;
#X obj 272 311 else/display;
#X msg 156 174 non osc;
#X obj 172 213 bng 19 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X text 213 184 non OSC messages are unmatched., f 16;
#X msg 54 22 list /A 1 b 3;
#X msg 76 44 /B/sub A 2 3;
#X text 145 20 A list message also works if the 1st element is an OSC path;
#X text 162 43 both addresses can also match to an argument;
#X text 213 66 matches two outputs;
#X text 185 90 '*' is a wildcard \, here it matches any single address.;
#X msg 135 118 /one/* bang!;
#X obj 330 281 else/display;
#X obj 98 257 else/osc.route /A /B/sub /one /one/two /one/three;
#X text 223 118 matches any subaddress of '/one';
#X msg 146 141 /*/* bang!;
#X text 219 141 matches anything here;
#X obj 389 280 else/display;
#X connect 0 0 18 0;
#X connect 4 0 18 0;
#X connect 5 0 18 0;
#X connect 7 0 18 0;
#X connect 8 0 18 0;
#X connect 10 0 18 0;
#X connect 11 0 18 0;
#X connect 16 0 18 0;
#X connect 18 0 1 0;
#X connect 18 1 2 0;
#X connect 18 2 3 0;
#X connect 18 3 6 0;
#X connect 18 4 17 0;
#X connect 18 5 22 0;
#X connect 20 0 18 0;
#X restore 496 260 pd more;
#X obj 19 258 else/osc.parse;
#X connect 29 0 31 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 31 1 33 0;
#X connect 34 0 31 0;
#X connect 36 0 31 0;
