#N canvas 414 35 562 679 10;
#X obj 4 308 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 4 529 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 4 558 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 4 653 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 99 316 cnv 17 3 208 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 99 537 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 189 328 list;
#X text 223 328 - sets and outputs breakpoints function, f 44;
#X text 189 356 bang;
#X text 223 356 - outputs breakpoints function, f 44;
#X text 147 384 min <float>;
#X text 147 398 max <float>;
#X text 223 384 - sets minimum graph boundary, f 44;
#X text 223 398 - sets maximum graph boundary, f 44;
#X text 189 538 list;
#X text 129 426 height <float>;
#X text 135 440 width <float>;
#X text 223 426 - sets heigth, f 44;
#X text 223 440 - sets width, f 44;
#X obj 4 586 cnv 3 550 3 empty empty flags 8 12 0 13 -228856 -1 0;
#X text 135 482 send <symbol>;
#X text 223 482 - sets send symbol, f 44;
#X text 117 496 receive <symbol>;
#X text 223 496 - sets receive symbol, f 44;
#X text 223 537 - breakpoints function for [envgen~]/[function~];
#X text 111 454 fgcolor <f \, f \, f>;
#X text 223 454 - sets RGB color of foreground, f 44;
#X text 111 468 bgcolor <f \, f \, f>;
#X text 223 468 - sets RGB color of background, f 44;
#X obj 24 40 cnv 4 4 4 empty empty Function 0 28 2 18 -233017 -1 0
;
#X obj 102 40 cnv 4 4 4 empty empty GUI 0 28 2 18 -233017 -1 0;
#X obj 3 3 cnv 15 301 42 empty empty function 20 20 2 37 -233017 -1
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 3 3 graph;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 305 3 graph;
#X obj 215 132 else/initmess 0 500 1 500 0;
#X obj 187 276 else/display;
#X obj 187 131 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#N canvas 769 53 527 508 function~ 0;
#X text 407 158 1;
#X obj 152 360 else/out~;
#X obj 195 287 else/function~;
#X text 406 254 -1;
#X obj 74 204 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 200 256;
#X obj 74 175 else/initmess 200;
#X obj 74 237 phasor~;
#X text 69 24 Here's an example on how to use [function] with [function~].
In this case it's probably desired to have a constant output to update
the function internally.;
#X text 69 66 Note also that you can have any kind of breakpoints function
and also draw something like a waveform in the range from -1 to 1 as
below!;
#X obj 270 334 else/graph~ 441 6 -1 1;
#X msg 131 132 print;
#X obj 195 131 else/initmess -1 0.5 1 0.5 -1;
#X obj 198 166 else/function 200 100 empty empty -1 1 220 220 220 50
50 50 1 0 0 0 -1 0.5 1 0.5 -1;
#X connect 2 0 1 1;
#X connect 2 0 1 0;
#X connect 2 0 9 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 6 0 2 0;
#X connect 10 0 12 0;
#X connect 11 0 12 0;
#X connect 12 0 2 0;
#X restore 469 205 pd function~;
#N canvas 600 144 526 424 envgen~ 0;
#X obj 179 231 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 442 136 1;
#X obj 179 311 else/envgen~;
#X obj 52 288 *~;
#X obj 52 336 else/out~;
#X obj 230 255 else/setmess;
#X text 441 232 0;
#X obj 52 219 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 200 256;
#X msg 230 282 0 50 1 50 0.6 300 0.6 200 0;
#X obj 230 109 else/initmess 0 50 1 50 0.6 300 0.6 200 0;
#X obj 52 252 else/bl.tri~;
#X obj 52 190 else/initmess 200;
#X text 56 24 Here's an example on how to use [function] with [envgen~].
Since [function] is always outputing a list \, you can use something
like [setmess] and only trigger the envelope when sending it a bang
or a float. Check the help file of [envgen~] for more details on how
it works., f 64;
#X obj 233 142 else/function 200 100 empty empty 0 1 220 220 220 50
50 50 0 0 0 0 0 50 1 50 0.6 300 0.6 200 0;
#X connect 0 0 2 0;
#X connect 2 0 3 1;
#X connect 3 0 4 1;
#X connect 3 0 4 0;
#X connect 5 0 8 0;
#X connect 5 0 2 0;
#X connect 7 0 10 0;
#X connect 9 0 13 0;
#X connect 10 0 3 0;
#X connect 11 0 7 0;
#X connect 13 0 5 0;
#X restore 481 185 pd envgen~;
#X text 177 565 (none);
#X text 141 510 init <float>;
#X text 223 510 - nonzero sets to init mode, f 44;
#X obj 190 164 else/function 200 100 empty empty 0 1 220 220 220 50
50 50 0 0 0 0 0 500 1 500 0;
#X text 153 342 set <list>;
#X text 223 342 - sets breakpoints function, f 44;
#X text 99 591 -heigth <float> (default 100) | -width <float> (default
200) | -send <symbol> (default none) | -receive <symbol> (default none)
| -bgcolor <f \, f \, f> | -fgcolor <f \, f \, f> | -resize <float>
| -min <float> (default 0) | -max <float> (default 1) | -init | -set
<list> (default 0 1000 0)., f 65;
#N canvas 531 76 598 533 messages 0;
#X text 58 438 -2;
#X text 64 337 2;
#X text 61 388 0;
#X obj 81 346 else/function 200 100 empty empty -2 2 220 220 220 50
50 50 1 0 0 0 -1 100 1 100 0;
#X obj 78 169 loadbang;
#X msg 78 192 -1 100 1 100 0 \, min -2 \, max 2;
#X text 151 91 You can also set different minimum/maximum points min/max
messages or flags \, but the values are clipped to the given minimum
and maximum points of the lines so the points are never outside the
graph bound.;
#X text 151 14 The [function] serves as an all purpose line generator
interface. This means you can have line segments in any range. By default
\, the range is from 0 to 1 \, but if a list input is given with points
outside that range \, the minimum and maximum points are updated accordingly
so the line segments fit into the GUI display.;
#X obj 78 461 else/display;
#X msg 96 217 min -1.5 \, max 1.5;
#X msg 148 275 bgcolor 220 220 220 \, fgcolor 50 50 50 \, width 200
\, height 100;
#X msg 172 304 bgcolor 50 50 50 \, fgcolor 175 0 0 \, width 150 \,
height 75;
#X text 461 257 default;
#X text 273 255 set dimension/colors;
#X msg 111 243 duration 1000 \, bang;
#X text 302 181 The duration message or flag resizes the duration of
each line segment so the overall duration is the same as the given
value in ms., f 36;
#X msg 58 142 resize;
#X text 151 144 The resize message resizes the graph bounds to the
min/max values.;
#X connect 3 0 8 0;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X connect 9 0 3 0;
#X connect 10 0 3 0;
#X connect 11 0 3 0;
#X connect 14 0 3 0;
#X connect 16 0 3 0;
#X restore 474 246 pd messages;
#N canvas 392 93 832 476 in/out 0;
#X text 91 100 ADSR (attack \, decay \, sustain \, release);
#X obj 94 207 else/function 200 100 empty empty 0 1 220 220 220 50
50 50 0 0 0 0 0 100 1 100 0.6 350 0.6 250 0;
#X obj 91 327 else/display;
#X obj 91 126 else/initmess 0 100 1 100 0.6 350 0.6 250 0;
#X text 54 385 You can also generate an output via the interface. You
can click on a point and drag it around. A point is removed if you
click on it and hit delete. Click anywhere in the graph where there's
not a point and you create a new one.;
#X obj 65 127 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X text 46 27 An odd list of at least 3 floats sets the envelope function.
The syntax is the same as the [function~] object (point1 \, period
\, point2 \, period \, point3 \, etc.) - an output is then generated
with the list values for [envgen~] or [function~]. A bang forces an
output of the stored line fucntion.;
#X msg 119 162 set 0 1000 1;
#X text 203 163 set message only sets (doesn't output);
#X text 509 116 ADSR (attack \, decay \, sustain \, release);
#X obj 512 253 else/function 200 100 empty empty 0 1 220 220 220 50
50 50 0 0 0 0 0 100 1 100 0.6 350 0.6 250 0;
#X obj 509 373 else/display;
#X obj 509 142 else/initmess 0 100 1 100 0.6 350 0.6 250 0;
#X obj 483 143 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 611 182 set message only sets (doesn't output), f 21;
#X msg 528 184 0 0.5;
#X text 469 52 A list of 2 floats sets the point number specified by
the first number (countiing from 0) with the value specified by the
second number of the list., f 51;
#X obj 584 186 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X msg 584 215 set 0 \$1;
#X connect 1 0 2 0;
#X connect 3 0 1 0;
#X connect 5 0 1 0;
#X connect 7 0 1 0;
#X connect 10 0 11 0;
#X connect 12 0 10 0;
#X connect 13 0 10 0;
#X connect 15 0 10 0;
#X connect 17 0 18 0;
#X connect 18 0 10 0;
#X restore 487 165 pd in/out;
#X text 117 370 duration <float>;
#X text 223 370 - resets overall duration, f 44;
#X text 129 412 resize <float>;
#X text 223 412 - sets new graph bounds according to min/max;
#N canvas 668 153 473 393 more 0;
#X obj 314 263 else/display;
#X obj 76 179 else/function 200 100 function-out function-in 0 1 220
220 220 50 50 50 1 0 0 0 0 1000 1;
#X obj 314 229 r function-out;
#X obj 312 186 s function-in;
#X obj 312 163 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 73 138 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 73 305 else/display;
#X text 58 39 The init message or flag outputs the last saved state
of [function] when loading the patch. The "send"/"receive" messages
and flags set a symbol name to send to and receive messages from [function].
when they're provided \, the inlet and outlet are not drawn.;
#X connect 1 0 6 0;
#X connect 2 0 0 0;
#X connect 4 0 3 0;
#X connect 5 0 1 0;
#X restore 492 266 pd more \; messages;
#X text 183 313 float;
#X text 223 314 - values from 0-1 are treated as indexes, f 44;
#N canvas 538 99 519 511 float 0;
#X obj 203 245 else/function 200 100 empty empty 0 1 220 220 220 50
50 50 0 0 0 0 0 100 1 100 0.6 350 0.6 250 0;
#X obj 200 365 else/display;
#X obj 215 209 else/initmess 0 100 1 100 0.6 350 0.6 250 0;
#X obj 203 154 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X floatatom 200 178 0 0 0 0 - - -;
#X text 55 15 Alternatively \, you can have a float input from 0 to
1 into [function] and they'll be treatet as indexes and the amplitude
value will then be output. This is useful if you want to control a
function with a slider input \, for instance., f 70;
#X obj 115 185 line;
#X obj 200 401 else/f2s~ 10;
#X obj 91 386 *~;
#X obj 91 353 osc~ 440;
#X obj 92 429 else/out~;
#X msg 115 159 0 \, 1 1000;
#X obj 383 364 vsl 18 110 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X text 55 68 Another option is to use [line] to drive it., f 70;
#X text 55 90 In this example we convert the function output to signals
with a ramp and use it to control the amplitude. But you can just use
it as a control message instead., f 70;
#X connect 0 0 1 0;
#X connect 0 0 12 0;
#X connect 1 0 7 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 8 1;
#X connect 8 0 10 0;
#X connect 8 0 10 1;
#X connect 9 0 8 0;
#X connect 11 0 6 0;
#X restore 493 225 pd float;
#X text 67 86 [function] is a breakpoints function GUI \, mainly used
with [function~] or [envgen~]. You can click and draw on it or send
it lists.;
#X connect 41 0 49 0;
#X connect 43 0 49 0;
#X connect 49 0 42 0;
