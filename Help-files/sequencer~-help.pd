#N canvas 675 162 565 404 10;
#X obj 4 238 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 4 309 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 4 344 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 108 318 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 3 376 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 25 40 cnv 4 4 4 empty empty Signal 0 28 2 18 -233017 -1 0;
#X obj 108 245 cnv 17 3 60 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 160 259 bang;
#X text 145 318 signal;
#X obj 3 3 cnv 15 301 42 empty empty sequencer~ 20 20 2 37 -233017
-1 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X text 154 274 float;
#X obj 79 40 cnv 4 4 4 empty empty sequencer 0 28 2 18 -233017 -1 0
;
#X text 124 289 set <list>;
#X text 148 245 signal;
#X obj 204 200 else/display~ 3;
#X text 68 94 When receiving a signal trigger (0 to non-0 transition)
or a bang \, [sequencer~] sends a signal value from a given sequence.
, f 55;
#X text 191 318 - values from a sequence;
#X text 144 353 1) list - list of floats sets the sequence (default
0);
#X obj 503 71 else/setdsp~;
#X text 44 174 see also:;
#X obj 45 193 else/impseq~;
#N canvas 946 45 534 710 example 0;
#X obj 81 42 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0 1
;
#X obj 82 233 else/out~;
#X obj 82 191 else/resonant2~ 500 100 1000;
#X obj 81 107 else/impseq~ 1 0.5 1 0.5 0 1 0.5 0.25 0;
#X obj 137 150 else/sequencer~ 500 900 300 700 200 600 400 800;
#X text 129 42 [sequencer~] can be used in conjunction with [impseq~]
;
#X obj 81 68 else/tempo~ 180;
#X obj 92 331 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 92 598 else/out~;
#X obj 92 556 else/resonant2~ 500 100 1000;
#X obj 92 363 else/tempo~ 180;
#X obj 147 431 else/trig2bang~;
#X obj 147 466 else/rand.i 1 8;
#X msg 147 489 goto \$1;
#X obj 92 392 else/impseq~ 1 0.5 1 0.5 0 1 0.5 0.25 0, f 20;
#X obj 147 525 else/sequencer~ 500 900 300 700 200 600 400 800;
#X text 221 362 A way to randomize the values;
#X obj 251 438 loadbang;
#X connect 0 0 6 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 2 1;
#X connect 6 0 3 0;
#X connect 7 0 10 0;
#X connect 9 0 8 0;
#X connect 10 0 14 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 14 0 9 0;
#X connect 14 0 11 0;
#X connect 14 0 15 0;
#X connect 15 0 9 1;
#X connect 17 0 12 0;
#X restore 467 204 pd example;
#X obj 204 169 else/sequencer~ 10 5 0 2 3 7 9 1 4 11 6 8;
#X text 194 273 - goes to a position index in the sequence (from 1)
, f 55;
#X obj 204 139 else/impulse~ 1;
#X text 194 288 - sets a new sequence;
#X text 194 245 - signal trigger to generate value from sequence,
f 55;
#X text 194 259 - control trigger to generate value from sequence,
f 55;
#X connect 31 0 23 0;
#X connect 33 0 31 0;
