#N canvas 477 95 562 676 10;
#X obj 23 40 cnv 4 4 4 empty empty Acess 0 28 2 18 -233017 -1 0;
#X obj 77 40 cnv 4 4 4 empty empty file 0 28 2 18 -233017 -1 0;
#X obj 2 3 cnv 15 301 42 empty empty dir 20 20 2 37 -233017 -1 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X obj 4 325 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 4 474 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 4 561 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 4 651 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 150 202 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 128 224 else/dir;
#X text 151 479 symbol -;
#X obj 118 39 cnv 4 4 4 empty empty directory 0 28 2 18 -233017 -1
0;
#X msg 114 137 dump;
#X msg 128 158 dir;
#X text 109 330 open <symbol> -;
#X text 169 373 dir -;
#X text 213 373 outputs the current directory in the right outlet,
f 54;
#X text 163 387 dump -;
#X obj 82 332 cnv 17 3 138 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 82 480 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 163 401 bang -;
#X obj 82 500 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 213 479 the files from the directory, f 54;
#X text 157 359 reset -;
#X text 213 359 resets to patch's directory, f 54;
#X obj 143 273 else/display 50;
#X msg 96 116 open ..;
#X msg 53 116 reset;
#N canvas 539 96 581 530 example 0;
#X msg 394 222 seek \$1;
#X obj 394 194 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 464 284 else/display;
#X obj 394 321 else/display;
#X msg 354 221 n;
#X msg 459 223 next;
#X text 72 76 The 'next' message increments the seek value and will
also wrap according to the number of files., f 74;
#X msg 99 229 seek \$1;
#X obj 83 291 else/display;
#X obj 99 202 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 99 126 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X msg 60 228 next;
#X obj 83 383 else/display;
#X obj 99 261 else/dir, f 15;
#X obj 186 153 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 364 256;
#X msg 83 356 \$2/\$1;
#X obj 99 176 else/rand.i 1 1;
#X obj 394 255 else/dir -ext .wav;
#X obj 83 327 pack s s;
#X obj 183 231 else/initmess n \, dir;
#X text 110 432 Note that the files are sorted with case sensitivity
\, in the same way as in the shell/terminal. This means upper case
letters are sorted before lower case letters., f 66;
#X text 110 472 By the way \, the maximum number of files that the
[dir] object can load is: 2Ë†15 (32.768)!, f 66;
#X text 120 126 <= random file from the "else" library folder;
#X text 235 151 n;
#X text 72 15 The 'n' message outputs the number of found files in
the opened directory in the 3rd outlet. The seek message can search
for a file acording to a number. If the seek number is greater than
the number of files \, then the search is wrapped according to the
number of files. The seek number is indexed from '1' and clipped to
'1' if < 1!, f 74;
#X connect 0 0 17 0;
#X connect 1 0 0 0;
#X connect 4 0 17 0;
#X connect 5 0 17 0;
#X connect 7 0 13 0;
#X connect 8 0 18 0;
#X connect 9 0 7 0;
#X connect 10 0 16 0;
#X connect 11 0 13 0;
#X connect 13 0 8 0;
#X connect 13 1 18 1;
#X connect 13 2 14 0;
#X connect 14 0 16 2;
#X connect 15 0 12 0;
#X connect 16 0 9 0;
#X connect 17 0 3 0;
#X connect 17 2 2 0;
#X connect 18 0 15 0;
#X connect 19 0 13 0;
#X restore 468 240 pd example;
#X text 181 415 n -;
#X text 213 415 output number of found files in the right outlet,
f 54;
#X text 213 387 dump files from directory in the left outlet, f 54
;
#X text 115 429 seek <float> -;
#X text 163 443 next -;
#X text 213 429 seeks and output the file corresponding to that number
;
#X text 213 443 increments seek value and outputs file, f 54;
#X text 147 115 <= opens parent directory;
#N canvas 635 167 480 505 open 0;
#X text 64 14 The 'open' message expects a symbol defining a directory.
If the symbol starts with "/" \, then it means the symbol specifies
an absolute path. Otherwise \, [dir] will look for directories relative
to the current directory.;
#X text 64 69 For example \, "open samples" looks for a subdirectory
named 'samples' relative to the current directory. More than one level
of subdirectories (like "open samples/wav") can be given., f 60;
#X obj 46 281 else/dir;
#X obj 61 367 else/display 50;
#X msg 46 255 open \$1 \, dir;
#X symbolatom 46 230 40 0 0 0 - - -;
#X obj 91 306 else/display 2;
#X text 121 310 "1" if successfully opened \, "0" otherwise;
#X text 55 450 If you change the contents of your directory \, you
need to use the 'reopen' message to reload the direcory's contents.
;
#X text 54 416 Opening a directory also loads its contents so you can
query for files.;
#X text 64 121 To open the parent directory you can use "open .." \,
and "open ." will just reopen the same directory. You can also use
"./" or "../" \, and using "../../" will open the grandparent folder
and so on. If you ask for "../sounds" \, then it looks for a subfolder
named "sounds" in the parent directory. This is how Pd handles relative
directories in general anyway \, so nothing really new here..., f
60;
#X text 70 335 (If a directory can't be opened \, the previously opened
remains), f 63;
#X connect 2 1 3 0;
#X connect 2 3 6 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X restore 486 202 pd open;
#X text 139 567 1) float -;
#X text 133 604 1) symbol -;
#X text 213 567 (optional) relative directory level \, 0 is current
patch's directory \, 1 is parent's patch's \, 2 parent's parent's and
so on (default 0), f 54;
#X text 213 604 directory to open (default: relative directory level)
, f 54;
#X obj 82 540 cnv 17 3 17 empty empty 3 5 9 0 16 -228856 -162280 0
;
#X text 157 541 float -;
#X text 213 541 "1" if opened a new directory \, "0" if it couldn't
open;
#X text 115 457 ext <symbol> -;
#X text 213 457 sets extension, f 54;
#X obj 4 624 cnv 3 550 3 empty empty flags 8 12 0 13 -228856 -1 0;
#X text 115 631 -ext <symbol>:;
#X text 213 631 - sets file extension type, f 54;
#N canvas 560 27 603 606 arguments 0;
#X obj 111 198 else/display;
#X obj 92 173 else/dir 1;
#X msg 92 146 dir;
#X text 101 245 Note that the [dir] object can be inside any layers
of subpatches inside an abstraction or a patch to get the patch's directory
\, it doesn't matter., f 66;
#X obj 118 555 else/display;
#X msg 97 502 dir;
#X obj 97 529 else/dir ..;
#X text 113 23 If [dir] is used inside an abstraction \, the first
optional argument sets the abstraction's depth level and can be used
to query the parent patch's directory. for instance \, "0" (the default)
is the current patch level \, but "1" sets the default directory to
the parent's patch., f 63;
#X text 113 84 Level outside the possible range are ignored. For instance
\, in this example we ask for the parent's directory \, but this is
not an abstraction \, so it loads the patch's directory instead.,
f 63;
#X text 171 528 <= parent folder directory relative to patch's directory
;
#X obj 116 455 else/display;
#X msg 97 402 dir;
#X obj 97 429 else/dir /;
#X text 171 428 <= open the root directory;
#X text 100 288 The second symbol argument (which can also be the first
\, since the first float argument is optional) specifies a directory
to open. If the symbol starts with "/" \, then it specifies an absolute
path. Otherwise \, it defines a path relative to the directory level
specified by the first argument (or the current patch's directory if
no float argument is given). For instance \, an 'x' symbol searches
for a 'x' subfolder. You can also use '..' to specify a parent patch
(more about this syntax in the [pd open] subpatch)., f 66;
#X connect 1 1 0 0;
#X connect 2 0 1 0;
#X connect 5 0 6 0;
#X connect 6 1 4 0;
#X connect 11 0 12 0;
#X connect 12 1 10 0;
#X restore 457 183 pd arguments;
#X text 157 344 reopen-;
#X text 213 330 opens a directory and loads contents, f 54;
#X text 213 344 reloads contents of the last opened directory, f 54
;
#N canvas 862 120 333 332 extension-flag 0;
#X obj 95 181 else/dir -ext .wav;
#X obj 95 210 print;
#X msg 108 129 ext .aif;
#X msg 126 154 ext .wav;
#X text 33 19 You can ask [dir] to access only files of a certain extension.
This can be set via a flag or the 'ext' message. By default \, [dir]
accesses all files., f 41;
#X msg 95 98 ext;
#X text 120 97 <= sets to all extensions;
#X text 39 252 Changing the extension reopens and reloads the directory's
contents. Therefore \, the contents get updated if they've changed
and you don't need a 'reopen' message for that., f 42;
#X msg 54 130 dump;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 5 0 0 0;
#X connect 8 0 0 0;
#X restore 426 221 pd extension-flag;
#X text 87 86 [dir] accesses files from a given directory.;
#X obj 158 246 else/display 4;
#X obj 82 520 cnv 17 3 17 empty empty 2 5 9 0 16 -228856 -162280 0
;
#X text 157 521 float -;
#X text 151 500 symbol -;
#X text 213 500 the current directory, f 54;
#X text 213 521 'n' number of found files, f 54;
#X text 227 225 <= open flag;
#X text 213 401 outputs 'n' \, 'directory' and 'files', f 54;
#X obj 128 302 print Files;
#X text 147 136 <= dump all files from the directory (left outlet)
;
#X text 155 157 <= sends directory path (right outlet);
#X text 198 249 <= 'n' number of files.;
#X msg 27 116 n, f 2;
#X msg 139 179 n \, dir \, dump;
#X obj 202 222 else/display 2;
#X text 170 202 <= same as "n \, dir \, dump";
#X text 224 178 <= same as "bang";
#X text 55 276 'directory' =>;
#N canvas 448 220 587 308 openpanel 0;
#X obj 103 77 openpanel 1;
#X obj 103 44 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 103 132 else/dir;
#X obj 148 157 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X msg 103 105 open \$1 \, dir;
#X obj 118 190 else/display;
#X text 209 72 You can use [openpanel] to search for a directory to
open., f 31;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 1 5 0;
#X connect 2 3 3 0;
#X connect 4 0 2 0;
#X restore 457 162 pd openpanel;
#X connect 16 0 17 0;
#X connect 17 0 72 0;
#X connect 17 1 33 0;
#X connect 17 2 64 0;
#X connect 17 3 78 0;
#X connect 20 0 17 0;
#X connect 21 0 17 0;
#X connect 34 0 17 0;
#X connect 35 0 17 0;
#X connect 76 0 17 0;
#X connect 77 0 17 0;
