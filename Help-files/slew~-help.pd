#N canvas 654 53 563 524 10;
#X obj 6 497 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 23 40 cnv 4 4 4 empty empty Slew 0 28 2 18 -233017 -1 0;
#X obj 67 40 cnv 4 4 4 empty empty limiter 0 28 2 18 -233017 -1 0;
#X obj 1 3 cnv 15 301 42 empty empty slew~ 20 20 2 37 -233017 -1 0
;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X obj 193 309 else/s2f~;
#X text 19 246 see also:;
#X obj 25 311 else/glide~;
#X obj 503 94 else/setdsp~ 1;
#X obj 193 280 slew~ 2e-05;
#X obj 126 183 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 126 207 else/rand.f~ 0 1;
#X obj 126 231 else/display~ 5;
#X obj 196 337 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 6496 1;
#X text 45 93 [slew~] takes an amplitude limit per second and an incoming
value to be 'slew limited'. It then generates a line torwards the incoming
value. The difference between [slew~] and [glide~] is that [slew~]
has a fixed speed \, not a fixed period. A limit of zero stops the
line generation and a negative value turns the limiter off., f 71
;
#X obj 24 290 else/slew2~;
#X obj 23 269 else/slew;
#X obj 25 332 else/lag~;
#X msg 203 255 set 0;
#X msg 192 231 set 1;
#X msg 256 174 1;
#X floatatom 256 250 5 0 0 0 - - -;
#X msg 265 202 0;
#X msg 273 224 -1;
#X msg 228 174 0.1;
#X text 298 224 <= no limit;
#X text 305 185 per second), f 22;
#X text 287 173 <= speed limit (amplitude;
#X text 292 202 <= 0 speed (stopped);
#X obj 4 361 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 4 433 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 4 466 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 109 442 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 109 368 cnv 17 3 35 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 109 409 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 141 385 set <float>;
#X text 220 443 - slew limited values;
#X text 220 369 - values to be slew limited, f 46;
#X text 165 473 1) float - slew limit speed (default 0);
#X text 220 410 - speed limit (negative values = no limit), f 46;
#X text 220 385 - sets new start point and goes back to target;
#X text 135 369 float/signal;
#X text 171 443 signal;
#X text 135 410 float/signal;
#N canvas 797 129 486 334 example 0;
#X obj 78 203 osc~;
#X obj 78 238 else/out~;
#X text 186 44 <= random numbers generated once a second;
#X text 213 87 <= values rescaled to 200-800 range;
#X text 174 126 <= values are limited \, generating a portamento;
#X obj 78 45 else/stepnoise~ 1;
#X obj 78 88 else/rescale~ 200 800;
#X obj 78 129 else/slew~ 800;
#X obj 78 164 else/display~ 5;
#X connect 0 0 1 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 0 0;
#X restore 475 328 pd example;
#X connect 13 0 21 0;
#X connect 17 0 13 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 17 0;
#X connect 26 0 17 0;
#X connect 27 0 17 0;
#X connect 28 0 29 0;
#X connect 29 0 17 1;
#X connect 30 0 29 0;
#X connect 31 0 29 0;
#X connect 32 0 29 0;
