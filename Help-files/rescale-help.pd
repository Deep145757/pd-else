#N canvas 510 23 565 550 10;
#X obj 4 310 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 396 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 458 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 113 405 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 114 317 cnv 17 3 48 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 201 189 hsl 160 17 0 127 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 198 217 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 2 3 cnv 15 301 42 empty empty rescale 20 20 2 37 #e0e0e0 #000000 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty Rescale 0 28 2 18 #e0e0e0 #000000 0;
#X obj 88 40 cnv 4 4 4 empty empty MIDI 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X text 210 318 - original value(s), f 35;
#X text 210 405 - rescaled value(s);
#X obj 138 40 cnv 4 4 4 empty empty values 0 28 2 18 #e0e0e0 #000000 0;
#X text 210 333 - sets exponential value, f 35;
#X text 130 333 exp <float>;
#X obj 178 276 else/display;
#X text 111 466 1) list -;
#X text 60 89 By default \, [rescale] rescales MIDI input values from 0 to 127 (including floats) into another range of values (0-1 by default). You can also set an exponential factor (1 by default - linear). All these parameters can be changed by arguments., f 73;
#N canvas 629 111 643 551 arguments 0;
#X obj 50 131 hsl 180 15 0 127 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 47 159 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 150 181 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 206 182 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 95 208 else/rescale -10 10;
#X obj 95 241 else/display;
#X text 148 162 min-out;
#X text 205 162 max-out;
#X obj 309 108 hsl 180 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 306 136 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 306 253 else/display;
#X obj 306 220 else/rescale 0 1 -10 10, f 36;
#X obj 465 193 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 519 194 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 463 174 min-out;
#X text 518 174 max-out;
#X obj 359 193 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 412 193 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 357 174 min-in;
#X text 411 174 max-in;
#X obj 51 371 hsl 180 15 -127 256 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 48 399 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 159 416 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 233 417 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 157 397 min-out;
#X text 232 397 max-out;
#X obj 86 477 nbx 6 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X msg 312 407 clip \$1;
#X obj 312 382 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 383 384 hsl 180 15 -2 2 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 380 412 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 380 495 nbx 6 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 380 457 else/rescale -1 1 -10 10;
#X text 63 294 The -clip flag or clip message clips the output into the output range. By default \, [rescale] will not clip the values to the output range but keep scaling outside that boundary with the same conversion parameters., f 71;
#X obj 86 443 else/rescale -clip -10 10;
#X text 85 25 If you give [rescale] up to 3 arguments \, it'll only have 3 inlets and you can set the minimum and maximum output via the rightmost inlets. But if you give 4 or more arguments \, [rescale] is initialized with more inlets so you can set all range parameters. The third or fifth argument is for the exponential factor explained later., f 74;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 4 1;
#X connect 3 0 4 2;
#X connect 4 0 5 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 11 0 10 0;
#X connect 12 0 11 3;
#X connect 13 0 11 4;
#X connect 16 0 11 1;
#X connect 17 0 11 2;
#X connect 20 0 21 0;
#X connect 21 0 34 0;
#X connect 22 0 34 1;
#X connect 23 0 34 2;
#X connect 27 0 32 0;
#X connect 28 0 27 0;
#X connect 29 0 30 0;
#X connect 30 0 32 0;
#X connect 32 0 31 0;
#X connect 34 0 26 0;
#X restore 464 208 pd arguments;
#X obj 113 373 cnv 17 3 17 empty empty n 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 166 373 float;
#X text 210 373 - range parameters \, see [pd arguments];
#N canvas 718 144 435 247 inverted 0;
#X obj 138 65 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 135 106 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 135 163 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 249 105 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 249 162 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 266 180 Inverted;
#X obj 249 128 else/rescale 1 0;
#X obj 135 129 else/rescale 0 1;
#X text 32 20 The scaling can be inverted by reversing the min/max output values;
#X connect 0 0 1 0;
#X connect 0 0 3 0;
#X connect 1 0 7 0;
#X connect 3 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 2 0;
#X restore 470 275 pd inverted;
#X obj 6 521 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 6 429 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 168 437 -clip: sets clipping on (default off);
#X text 210 349 - <1> turns clipping on \, <0> off, f 35;
#X text 124 349 clip <float>;
#N canvas 579 93 570 504 negative-exponential 0;
#X floatatom 69 69 10 1 1.2 0 - - - 0;
#X obj 72 42 hsl 128 15 0.1 10 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 55 318 cnv 15 198 138 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-positive 128 float 0;
#X coords 0 1 127 0 200 140 1 0 0;
#X restore 54 317 graph;
#X text 80 42 exponential factor;
#X text 41 447 0;
#X text 39 315 1;
#X obj 96 185 trigger float float;
#X obj 96 126 trigger bang float, f 23;
#X obj 96 226 else/rescale;
#X msg 231 190 exp \$1;
#X obj 315 318 cnv 15 198 138 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-negative 128 float 0;
#X coords 0 1 127 0 200 140 1 0 0;
#X restore 314 317 graph;
#X text 301 447 0;
#X text 299 315 1;
#X obj 298 190 trigger float float;
#X obj 298 131 trigger bang float, f 23;
#X obj 298 231 else/rescale;
#X msg 433 195 exp \$1;
#X obj 298 102 * -1;
#X obj 96 255 tabwrite \$0-positive;
#X obj 298 260 tabwrite \$0-negative;
#X text 272 36 Negative exponentials are allowed. In this case \, it's like the curve shape has been mirrored in reverse., f 36;
#X obj 298 163 else/loop 128;
#X obj 96 158 else/loop 128;
#X obj 69 104 sel 1;
#X msg 66 125 0;
#X connect 0 0 19 0;
#X connect 0 0 25 0;
#X connect 1 0 0 0;
#X connect 7 0 9 0;
#X connect 7 1 20 1;
#X connect 8 0 24 0;
#X connect 8 1 10 0;
#X connect 9 0 20 0;
#X connect 10 0 9 0;
#X connect 15 0 17 0;
#X connect 15 1 21 1;
#X connect 16 0 23 0;
#X connect 16 1 18 0;
#X connect 17 0 21 0;
#X connect 18 0 17 0;
#X connect 19 0 16 0;
#X connect 23 0 15 0;
#X connect 24 0 7 0;
#X connect 25 0 26 0;
#X connect 25 1 8 0;
#X connect 26 0 8 0;
#X restore 398 254 pd negative-exponential;
#X text 179 466 up to 3 arguments set: minimum output \, maximum output \, exponential factor. 4 arguments set minimum input \, maximum input \, minimum output \, maximum output and 5 fifth argument sets the exponential factor - default (0 \, 127 \, 0 \, 1 \, 1);
#X text 172 318 list;
#X text 172 405 list;
#X text 44 247 see also:;
#X obj 45 273 else/rescale~;
#X obj 178 248 else/rescale -1 1;
#X obj 178 159 else/initmess 16 63 127;
#N canvas 288 93 975 347 log/exponential 0;
#X floatatom 488 130 10 1 1.2 0 - - - 0;
#X obj 464 63 hsl 128 15 0.1 10 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 693 169 cnv 15 198 138 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-exponential 128 float 0;
#X coords 0 1 127 0 200 140 1;
#X restore 692 168 graph;
#X text 472 63 exponential factor;
#X text 901 295 0;
#X text 899 163 1;
#X obj 488 283 tabwrite \$0-exponential;
#X obj 488 213 trigger float float;
#X obj 488 154 trigger bang float, f 23;
#X obj 488 254 else/rescale;
#X msg 623 218 exp \$1;
#X obj 488 186 else/loop 128;
#X obj 461 87 sel 1;
#X msg 461 108 0;
#X obj 69 195 hsl 128 15 220 880 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X floatatom 66 225 5 0 0 0 - - - 0;
#X msg 66 167 440;
#X obj 237 156 hsl 136 16 0 1 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 234 128 0.5;
#X floatatom 234 232 11 0 0 0 - - - 0;
#X obj 234 207 else/rescale 0 1 220 880 1;
#X text 47 25 The 3rd of 5th argument sets the log/exponential factor. You can also set this with the 'exp' message. A value of '0' makes it linear (the default) \, but a value of "1" makes it behave like the 'log' mode in iemguis. This is useful for frequencies like \, below \, we have a range from 220 to 880 and the mid value is 440!;
#X floatatom 234 183 12 0 0 0 - - - 0;
#X text 74 125 log mode built into iemguis., f 16;
#X text 645 49 For other positive values \, it's like raising to the power of the given exponential \, try the example to the left with values from 0.1 to 10 (value 1 becomes '0' for linear). The input from 0 to 127 is then mapped to 0-1 generating the exponential curves below., f 48;
#X text 108 275 For more details see the help file of sliders and other iemguis., f 35;
#X connect 0 0 9 0;
#X connect 1 0 13 0;
#X connect 8 0 10 0;
#X connect 8 1 7 1;
#X connect 9 0 12 0;
#X connect 9 1 11 0;
#X connect 10 0 7 0;
#X connect 11 0 10 0;
#X connect 12 0 8 0;
#X connect 13 0 14 0;
#X connect 13 1 0 0;
#X connect 14 0 0 0;
#X connect 15 0 16 0;
#X connect 17 0 15 0;
#X connect 18 0 23 0;
#X connect 19 0 18 0;
#X connect 21 0 20 0;
#X connect 23 0 21 0;
#X restore 428 231 pd log/exponential;
#X connect 5 0 6 0;
#X connect 6 0 43 0;
#X connect 43 0 24 0;
#X connect 44 0 43 0;
