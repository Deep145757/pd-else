#N canvas 693 57 560 487 10;
#X obj 4 312 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 4 389 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 4 424 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 109 398 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 3 456 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 25 40 cnv 4 4 4 empty empty data 0 28 2 18 -233017 -1 0;
#X obj 109 320 cnv 17 3 63 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 166 320 bang;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X obj 67 40 cnv 4 4 4 empty empty sequencer 0 28 2 18 -233017 -1 0
;
#X text 130 368 set <list>;
#X obj 185 253 else/display;
#X text 160 398 float;
#X obj 3 3 cnv 15 301 42 empty empty sequencer 20 20 2 37 -233017 -1
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X text 200 351 - goes to a position index in the sequence (from 1)
;
#N canvas 920 150 666 484 +examples 0;
#X obj 338 36 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 338 72 else/tempo 120 100;
#X floatatom 242 130 5 0 0 0 - - -;
#X msg 242 67 up;
#X msg 273 67 down;
#X msg 193 67 alt \$1;
#X obj 193 45 tgl 16 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 366 25 Use [count] if you want to also have the sequence being
read in different directions., f 29;
#X obj 368 107 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 368 133 else/tempo 120 100;
#X floatatom 368 191 5 0 0 0 - - -;
#X text 397 101 Or [rand.i] for random input values., f 20;
#X obj 242 105 else/count 1 11;
#X obj 368 166 else/rand.i 1 11;
#X obj 78 98 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0 1
;
#X obj 241 261 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 100 256;
#X obj 78 155 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 78 124 else/tempo 120 100;
#X obj 346 326 else/decay2~ 50 2000;
#X obj 331 356 *~;
#X obj 331 391 else/out~;
#X obj 241 326 else/bl.saw~;
#X obj 241 288 trigger float bang;
#X obj 241 232 else/sequencer 50 - 100 - 80 120 60 - 150 100 70;
#X text 544 218 A sequence of frequencies with pauses., f 15;
#X text 69 60 Feed it with bang from tempo, f 15;
#X obj 34 158 sel 0;
#X msg 34 181 goto 1;
#X connect 0 0 1 0;
#X connect 1 0 12 0;
#X connect 2 0 23 0;
#X connect 3 0 12 0;
#X connect 4 0 12 0;
#X connect 5 0 12 0;
#X connect 6 0 5 0;
#X connect 8 0 9 0;
#X connect 9 0 13 0;
#X connect 10 0 23 0;
#X connect 12 0 2 0;
#X connect 13 0 10 0;
#X connect 14 0 17 0;
#X connect 14 0 26 0;
#X connect 15 0 22 0;
#X connect 16 0 23 0;
#X connect 17 0 16 0;
#X connect 18 0 19 1;
#X connect 19 0 20 0;
#X connect 21 0 19 0;
#X connect 22 0 21 0;
#X connect 22 1 18 0;
#X connect 23 0 15 0;
#X connect 26 0 27 0;
#X connect 27 0 23 0;
#X restore 471 263 pd +examples;
#X obj 185 285 print sequence;
#X text 200 320 - gets element(s) from sequence;
#X text 200 398 - element(s) from a sequence;
#X text 141 433 1) list - list of elements sets the sequence (default
0);
#N canvas 1000 89 449 462 chords 0;
#X obj 113 198 else/keyboard 17 80 2 4 0 0 empty empty;
#X obj 113 303 else/voices 4 1 -list;
#X obj 113 332 clone 4 voice 4;
#X obj 113 369 else/out~;
#X obj 113 167 makenote 127 700;
#X obj 113 80 else/tempo 50 20 -on;
#X text 126 25 Use "-" to join notes into chords in a sequence., f
26;
#X obj 113 135 else/sequencer 60-63-67 70 72 75 - 65-68-71;
#X obj 113 104 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 3 1;
#X connect 4 0 0 0;
#X connect 4 1 0 1;
#X connect 5 0 8 0;
#X connect 7 0 4 0;
#X connect 8 0 7 0;
#X restore 489 283 pd chords;
#X text 118 352 goto <float>;
#X text 160 337 float;
#X text 200 336 - sets index (from 1) and outputs it;
#X obj 128 201 else/sequencer 1-2-3 4 5 six 7-eight-9 ten - bang;
#X obj 128 175 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 65 87 When receiving a bang \, [sequencer] sends an element
(float or symbol) from a given sequence. Elements joined by "-" are
sent together. A single "-" is treated as a pause. Symbol elements
are sent without a symbol selector \, and a "bang" comes out as a proper
"bang"., f 69;
#X obj 128 227 route bang;
#X obj 128 255 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 128 152 else/tempo 60 -on;
#X text 200 367 - sets a new sequence \, only 'set' sets an empty sequence
;
#N canvas 947 183 444 280 combine 0;
#X obj 63 127 else/display;
#X obj 63 99 else/sequencer 1-2-3 4 5 six 7-eight-9 ten - bang;
#X obj 63 73 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 63 50 else/tempo 60 -on;
#X obj 64 166 else/combine;
#X obj 64 191 else/display 10;
#X text 152 165 <== you can use [combine] to join elements sent at
the same time. This may also add a symbol/list selector., f 42;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X restore 483 243 pd combine;
#N canvas 890 147 472 334 text 0;
#X obj 61 272 else/display;
#X obj 61 180 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 61 157 else/tempo 60 -on;
#X obj 193 97 vradio 15 1 0 4 empty empty empty 0 -8 0 10 -228856 -1
-1 0;
#X obj 193 187 else/setmess set;
#X obj 193 211 display;
#X obj 61 246 else/sequencer;
#X obj 193 71 loadbang;
#X text 51 19 Use [text] to store many sequence presets.;
#X obj 243 118 text define -k \$0-presets;
#A set 1 2 3 4 5 six 7 eight 9 ten \; 40 50 60 70 \; a b c d e f g
\; ping pléin póing;
#X obj 193 164 text get \$0-presets;
#X connect 1 0 6 0;
#X connect 2 0 1 0;
#X connect 3 0 10 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X connect 7 0 3 0;
#X connect 10 0 4 0;
#X restore 501 223 pd text;
#X connect 18 0 24 0;
#X connect 32 0 35 0;
#X connect 33 0 32 0;
#X connect 35 0 36 0;
#X connect 35 1 18 0;
#X connect 37 0 33 0;
