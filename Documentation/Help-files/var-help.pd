#N canvas 456 63 566 377 10;
#X obj 4 246 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 278 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 313 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 138 287 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 138 255 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 350 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty Stores\ one\ or\ more\ variables 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 2 cnv 15 301 42 empty empty var 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 3 3 graph;
#X text 176 254 list;
#X text 176 287 list;
#X obj 133 175 else/var a;
#X obj 133 142 bng 19 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X floatatom 90 143 5 0 0 0 - - - 0;
#X floatatom 133 205 5 0 0 0 - - - 0;
#X obj 326 142 bng 19 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 326 175 else/var a b;
#X msg 361 144 1 2;
#X listbox 326 205 8 0 0 0 - - - 0;
#X obj 236 142 bng 19 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X floatatom 197 143 5 0 0 0 - - - 0;
#X floatatom 236 205 5 0 0 0 - - - 0;
#X obj 236 175 else/var b;
#X text 81 90 [var] is quite similar to [value] but it can set and recall more than one variable as lists., f 64;
#X text 211 254 - input values to given variables;
#X text 211 287 - values to given variables;
#X text 176 327 1 list - list of variable names;
#N canvas 677 229 449 384 send 0;
#X msg 48 143 \; a \$1;
#X obj 114 143 send b;
#X floatatom 48 114 5 0 0 0 - - - 0;
#X floatatom 114 115 5 0 0 0 - - - 0;
#X obj 78 218 bng 19 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 78 251 else/var a b;
#X listbox 78 281 8 0 0 0 - - - 0;
#X obj 197 184 int 6;
#X obj 197 129 float 1.5;
#X msg 197 101 send a;
#X msg 197 156 send b;
#X obj 288 181 value;
#X floatatom 288 107 5 0 0 0 - - - 0;
#X msg 305 132 send a;
#X msg 315 156 send b;
#X text 32 34 [var] gets a value if you send a value to a named variable with [send] and other sending mechanisms available in the d Vanilla objects [float \, [int] and [value]. Unlike these other objects \, [var] does not have a 'send' message.;
#X text 180 232 Note that [var] is independent from [value] \, which means if they have the same variable names \, the values are not shared. For sanity \, keep them named differenty anyway \, as I can't see a use case for it., f 35;
#X text 56 326 Similarly \, [expr] is independent from [var] \, so you cannot set or retrieve [var] values in [expr]., f 51;
#X connect 2 0 0 0;
#X connect 3 0 1 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 12 0 11 0;
#X connect 13 0 11 0;
#X connect 14 0 11 0;
#X restore 479 185 pd send;
#X connect 19 0 22 0;
#X connect 20 0 19 0;
#X connect 21 0 19 0;
#X connect 23 0 24 0;
#X connect 24 0 26 0;
#X connect 25 0 24 0;
#X connect 27 0 30 0;
#X connect 28 0 30 0;
#X connect 30 0 29 0;
