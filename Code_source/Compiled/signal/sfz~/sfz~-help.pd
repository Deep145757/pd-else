#N canvas 486 27 560 465 10;
#X obj 151 244 else/out~;
#X obj 2 3 cnv 15 301 42 empty empty sfz~ 20 20 2 37 #e0e0e0 #000000 0;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 22 40 cnv 4 4 4 empty empty SFZ\ soundfont\ synthesizer 0 28 2 18 #e0e0e0 #000000 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 1 433 cnv 15 552 21 empty \$0-pddp.cnv.footer empty 20 12 0 14 #dcdcdc #404040 0;
#X obj 1 309 cnv 3 550 3 empty \$0-pddp.cnv.inlets inlet 8 12 0 13 #dcdcdc #000000 0;
#X obj 1 352 cnv 3 550 3 empty \$0-pddp.cnv.outlets outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 1 402 cnv 3 550 3 empty \$0-pddp.cnv.argument arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 135 149 else/keyboard 12 53 3 3 0 0 empty empty;
#X obj 85 360 cnv 17 3 17 empty \$0-pddp.cnv.let.n 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 85 380 cnv 17 3 17 empty \$0-pddp.cnv.let.r 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 163 361 signal;
#X text 163 381 signal;
#X text 206 361 - left output signal of stereo output, f 39;
#X text 206 381 - right output signal of stereo output, f 39;
#X text 143 409 1) symbol;
#X obj 311 114 else/openfile -h https://sfzformat.com/;
#N canvas 668 54 416 538 MIDI-in 0;
#N canvas 396 60 656 589 MIDI-input 0;
#X obj 109 116 ctlin;
#X obj 130 194 notein;
#X obj 159 391 polytouchin;
#X obj 49 33 pgmin;
#X obj 133 340 touchin;
#X obj 101 548 outlet;
#X obj 119 289 bendin;
#X obj 49 59 - 1;
#X msg 375 453 bend \$1;
#X obj 292 319 vsl 22 100 0 16384 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 375 321 sel 0;
#X obj 375 373 line;
#X msg 311 286 set \$1;
#X obj 375 400 change;
#X msg 375 347 8192 150;
#X obj 292 261 else/initmess 8192;
#X obj 375 297 else/mouse;
#X obj 375 424 else/rint;
#X msg 49 85 pgm \$1;
#X obj 77 143 pack f f;
#X msg 77 164 ctl \$1 \$2;
#X obj 101 216 pack f f;
#X msg 101 237 note \$1 \$2;
#X msg 119 311 bend \$1;
#X msg 133 362 touch \$1;
#X obj 145 415 pack f f;
#X msg 145 436 polytouch \$1 \$2;
#X text 231 172 Note that vanilla's [pgmin] object is indexed from 1 so you need to subtract 1 to use it on [sfz~] \, which is indexed from 0 ([pgm.in] from ELSE is also indexed from 0 by the way). The example below emulates a bend wheel \, maybe an extra object for the future...;
#X text 245 37 Using Vanilla's MIDI input objects for specific MIDI messages. the channel values are not needed!, f 49;
#X text 335 80 control change: value \, control, f 51;
#X text 255 80 ctl <f \, f> -;
#X text 335 107 pich bend: value, f 51;
#X text 335 121 channel aftertouch: value, f 51;
#X text 267 107 bend <f> -;
#X text 237 121 touch <float> -;
#X text 219 135 polytouch <f \, f> -;
#X text 335 135 key aftertouch: value \, key, f 51;
#X text 335 94 program change: program, f 51;
#X text 249 94 pgm <float> -;
#X connect 0 0 19 0;
#X connect 0 1 19 1;
#X connect 1 0 21 0;
#X connect 1 1 21 1;
#X connect 2 0 25 0;
#X connect 2 1 25 1;
#X connect 3 0 7 0;
#X connect 4 0 24 0;
#X connect 6 0 23 0;
#X connect 7 0 18 0;
#X connect 8 0 5 0;
#X connect 9 0 11 0;
#X connect 10 0 14 0;
#X connect 11 0 12 0;
#X connect 11 0 13 0;
#X connect 12 0 9 0;
#X connect 13 0 17 0;
#X connect 14 0 11 0;
#X connect 15 0 9 0;
#X connect 16 0 10 0;
#X connect 17 0 8 0;
#X connect 18 0 5 0;
#X connect 19 0 20 0;
#X connect 20 0 5 0;
#X connect 21 0 22 0;
#X connect 22 0 5 0;
#X connect 23 0 5 0;
#X connect 24 0 5 0;
#X connect 25 0 26 0;
#X connect 26 0 5 0;
#X restore 145 339 pd MIDI-input;
#N canvas 558 88 641 514 control-messages 0;
#X obj 292 406 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 127;
#X obj 193 406 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 127;
#X obj 28 439 outlet;
#X obj 104 188 vsl 18 100 0 127 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 104 337 s \$0-ctl;
#X obj 58 409 r \$0-ctl;
#X obj 193 460 s \$0-ctl;
#X obj 292 460 s \$0-ctl;
#X obj 367 229 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 127;
#X obj 367 289 s \$0-ctl;
#X text 186 385 sustain pedal;
#X text 286 385 tonal or sostenuto pedal;
#X text 384 428 see also:;
#X text 91 163 modulation;
#X text 169 163 volume;
#X obj 181 337 s \$0-ctl;
#X obj 181 188 vsl 18 100 0 127 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X text 74 15 The control change parameters are programmed in a given synthesizer \, but if usually follows some standards like the messages where using here., f 72;
#X text 349 168 For reference \, see:;
#X obj 266 336 s \$0-ctl;
#X obj 266 187 vsl 18 100 0 127 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X text 263 163 pan;
#X msg 298 278 64;
#X text 391 229 flush note ons (panic);
#X msg 181 308 ctl \$1 7;
#X msg 266 307 ctl \$1 10;
#X msg 367 260 ctl \$1 123;
#X msg 292 434 ctl \$1 66;
#X obj 382 452 else/suspedal;
#X obj 473 169 else/openfile -h https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2 MIDI Specifications;
#X obj 28 63 else/keyboard 17 80 5 2 0 0 empty empty;
#X msg 193 434 ctl \$1 64;
#X msg 104 305 ctl \$1 1;
#X connect 0 0 27 0;
#X connect 1 0 31 0;
#X connect 3 0 32 0;
#X connect 5 0 2 0;
#X connect 8 0 26 0;
#X connect 16 0 24 0;
#X connect 20 0 25 0;
#X connect 22 0 25 0;
#X connect 24 0 15 0;
#X connect 25 0 19 0;
#X connect 26 0 9 0;
#X connect 27 0 7 0;
#X connect 30 0 2 0;
#X connect 31 0 6 0;
#X connect 32 0 4 0;
#X restore 161 389 pd control-messages;
#X obj 132 309 midiin;
#X obj 115 257 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X text 235 338 <-- open;
#X text 218 371 More on:;
#X obj 115 284 else/midi -loop midi-seq.mid;
#X obj 122 457 else/out~;
#X obj 115 428 else/sfz~ example;
#X text 33 21 The supported MIDI messags are:;
#X text 99 43 - 'note' for Note messages \; - 'ctl' for Control Change \; - 'pgm' for Program Change \; - 'bend' for Pitch Bend \; - 'touchin' for Channel Aftertouch \; - 'polytouchin' for Key Aftertouch;
#X text 36 127 In the example of the parent patch \, the list message as given by [keyboard] acts in the same way as a 'note' message., f 53;
#X text 36 167 Raw MIDI is also possible via float input \, so you can use Pd Vanilla's [midiin] object or play a MIDI file from [midi]. You can also use vanilla's other MIDI objects like [pgmin] of course or the ones from ELSE \, such as [pgm.in] \, see [pd MIDI-input] below., f 53;
#X connect 0 0 8 0;
#X connect 1 0 8 0;
#X connect 2 0 8 0;
#X connect 3 0 6 0;
#X connect 6 0 8 0;
#X connect 8 0 7 0;
#X connect 8 1 7 1;
#X restore 445 246 pd MIDI-in;
#N canvas 418 90 760 538 tuning_&_more 0;
#X msg 78 184 panic;
#X obj 102 248 hsl 128 15 -1200 1200 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 99 272 10 0 0 0 - - - 0;
#X msg 99 296 transp \$1;
#X text 98 225 set transposition in cents;
#X text 548 221 see also:;
#N canvas 270 25 604 694 tuning 0;
#X text 87 87 bohlen-pierce;
#X text 100 108 quarter tones;
#X obj 41 24 loadbang;
#X msg 271 144 base 57;
#X text 110 136 equal temperament;
#X obj 271 198 s \$0-tuning;
#X msg 166 328 scale 0 180 350 500 700 850 1030 1200;
#X obj 166 446 s \$0-tuning;
#X msg 281 169 base 60;
#X obj 41 225 s \$0-tuning;
#X text 77 50 eigth tones;
#X text 333 169 (default);
#X obj 65 610 s \$0-tuning;
#X obj 372 569 r \$0-tuning;
#X obj 349 612 outlet;
#X text 273 123 Set fundamental;
#X text 404 327 an arbitrary scale;
#X msg 184 356 scale;
#X text 230 356 default (12 tone scale);
#X obj 349 505 bng 17 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X msg 41 50 48 2;
#X msg 53 86 13 3;
#X msg 64 109 24 2;
#X msg 74 137 12 2;
#N canvas 424 241 481 377 scale-generator 0;
#X obj 87 150 + 13;
#X obj 87 127 trigger float float, f 32;
#X obj 87 340 outlet;
#X obj 87 21 inlet;
#X obj 200 311 print scale_generate;
#X obj 87 177 t f f b, f 18;
#X msg 212 285 ----------------------------------------;
#X obj 27 159 vradio 15 1 0 8 fgfsgdg sfgshgd empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X obj 100 49 bng 17 250 50 0 fsvfs dghsj empty 17 7 0 10 #dfdfdf #000000 #000000;
#X obj 87 78 else/loop 8;
#X obj 87 206 else/eqdiv;
#X obj 87 236 else/insert scale;
#X msg 27 290 sel-tuning 0 \$1;
#X obj 212 211 pack float float;
#X msg 212 236 set-tuning 0 \$2 \$1-tones-per-octave;
#X text 10 113 or select a program, f 11;
#X text 178 47 Generates 8 scales and loads them in different program numbers (0-127) on bank 0! These are equal divisions of the octave from 13 to 20 steps. A scale name is also generated., f 47;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 1 1 13 1;
#X connect 3 0 9 0;
#X connect 5 0 10 0;
#X connect 5 1 13 0;
#X connect 5 2 6 0;
#X connect 6 0 4 0;
#X connect 7 0 12 0;
#X connect 8 0 9 0;
#X connect 9 0 1 0;
#X connect 10 0 11 0;
#X connect 11 0 2 0;
#X connect 11 0 4 0;
#X connect 12 0 2 0;
#X connect 13 0 14 0;
#X connect 14 0 2 0;
#X connect 14 0 4 0;
#X restore 349 536 pd scale-generator;
#X text 469 535 <-- open;
#X text 373 506 generate scale;
#X msg 94 572 unsel-tuning;
#X text 326 144 (decimal values allowed);
#X obj 41 166 else/eqdiv;
#X obj 41 194 else/insert scale;
#X msg 197 385 set-tuning 0 0;
#X text 294 385 set bank 0 \, pgm 0, f 17;
#X msg 65 508 sel-tuning 1 1;
#X msg 79 540 sel-tuning 0 0;
#X text 158 507 select bank 1 \, pgm 1;
#X text 172 539 select bank 0 \, pgm 0;
#X text 174 572 unselect tuning, f 15;
#X text 175 41 Initially loading an eighth note scale into bank 0 \, program 0 by default., f 43;
#X msg 117 298 set-tuning 1 1 arbitrary;
#X text 118 277 set: bank 1 \, pgm 1 and scale name;
#X connect 2 0 20 0;
#X connect 3 0 5 0;
#X connect 6 0 7 0;
#X connect 8 0 5 0;
#X connect 13 0 14 0;
#X connect 17 0 7 0;
#X connect 19 0 24 0;
#X connect 20 0 29 0;
#X connect 21 0 29 0;
#X connect 22 0 29 0;
#X connect 23 0 29 0;
#X connect 24 0 14 0;
#X connect 27 0 12 0;
#X connect 29 0 30 0;
#X connect 30 0 9 0;
#X connect 31 0 7 0;
#X connect 33 0 12 0;
#X connect 34 0 12 0;
#X connect 39 0 7 0;
#X restore 117 329 pd tuning;
#X text 360 265 Open [pd tuning] for more details. Note that this example uses the [eqdiv] object to generate scales with equal divisions and starts with an eighth tone scale., f 62;
#X text 122 181 Big panic red button \, resets whole synth, f 21;
#X obj 612 221 else/retune;
#X obj 71 453 else/out~;
#X obj 30 25 else/keyboard 17 80 6 3 0 0 empty empty;
#X obj 69 420 else/sfz~ example;
#X msg 64 149 flush;
#X floatatom 203 319 5 0 0 0 - - - 0;
#X msg 203 342 tuningfreq \$1;
#X text 319 128 [sfz~] also has microtonal capabilities. The 'scale' message sets a scale in cents and you can previously set a base value with the 'base' message \, which sets the scale fundamental in MIDI pitch (60 by default \, which is "C4"). Just 'scale' sets to the regular 12 tone temperament. Scales can have steps different that 12 and may not be based on the octave (such as the bohlen-Pierce scale). If picthes fall out of the 0-127 range \, the keys are muted. This behaves similarly to the [retune] object., f 69;
#X text 368 316 The 'set-tuning' message sets a tuning bank \, a program number (both from 0-127) and a tuning name - default values are (0 \, 0 \, custom-tuning). The 'scale' message then sets the tuning into the bank/program and loads it into the channel for use., f 56;
#X text 374 388 The 'sel-tuning' message selects a bank/program. The scale name is then output in the right outlet. If no scale is set \, "Unnamed" is output. To unselect a tuning \, use 'unsel-tuning' to clear (this loads the default 12 tone temperament back)., f 55;
#X connect 0 0 12 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 12 0;
#X connect 6 0 12 0;
#X connect 11 0 12 0;
#X connect 12 0 10 0;
#X connect 12 1 10 1;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X restore 409 268 pd tuning_&_more;
#X text 205 409 - sets file to load (default none);
#X obj 135 217 else/sfz~ example.sfz;
#N canvas 569 184 547 428 ALL 0;
#X text 139 165 panic -;
#X text 189 303 transposition: cents \, channel (optional), f 51;
#X obj 29 20 cnv 17 3 375 empty \$0-pddp.cnv.let.0 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 15 11 cnv 3 520 3 empty \$0-pddp.cnv.inlets empty 8 12 0 13 #dcdcdc #000000 0;
#X text 127 333 version -;
#X text 189 333 prints version info on terminal, f 51;
#X text 97 182 scale <list> -;
#X text 97 208 base <float> -;
#X text 189 208 base MIDI pitch for scale, f 51;
#X text 67 224 set-tuning <list> -;
#X text 67 240 sel-tuning <list> -;
#X obj 15 403 cnv 3 520 3 empty \$0-pddp.cnv.inlets empty 8 12 0 13 #dcdcdc #000000 0;
#X text 189 182 scale in cents to retune (12-tone temperament if no list is given), f 51;
#X text 97 256 unsel-tuning -;
#X text 189 224 sets tuning <bank \, program & name> for a scale, f 51;
#X text 189 240 selects stored tuning <bank \, program>, f 51;
#X text 189 256 unselect a tuning (sets to 12-tone temperament), f 51;
#X text 85 303 transp <float> -;
#X text 145 75 list -;
#X text 189 75 same as "note" message, f 51;
#X text 139 32 float -;
#X text 189 32 raw MIDI input, f 51;
#X text 91 46 open <symbol> -;
#X text 189 61 note: key \, velocity, f 51;
#X text 91 119 touch <float> -;
#X text 55 61 note <float \, float> -;
#X text 61 90 ctl <float \, float> -;
#X text 97 105 bend <float> -;
#X text 73 133 polytouch <f \, f> -;
#X text 189 119 channel aftertouch: value, f 51;
#X text 189 133 key aftertouch: value \, key, f 51;
#X text 189 105 pitch bend: value, f 51;
#X text 189 90 control change: value \, control, f 51;
#X text 85 348 voices <float> -;
#X text 189 348 sets number of voices, f 51;
#X text 189 46 load soundfont file (.sfz extension implied), f 51;
#X text 139 149 flush -;
#X text 189 149 sends note offs for all notes to clear hanging ones;
#X text 189 165 stops all sounds immediately, f 51;
#X text 85 363 volume <float> -;
#X text 189 363 ..., f 51;
#X text 85 271 scala <symbol> -;
#X text 189 271 open scala tuning file, f 51;
#X text 61 288 tuningfreq <float> -;
#X text 189 288 sets reference frequency for A4 in hertz, f 51;
#X text 43 317 tuningstretch <float> -;
#X text 189 317 sets tuning stretch ratio, f 51;
#X restore 220 325 pd ALL Messages;
#N canvas 623 71 502 610 basic 1;
#X obj 152 370 else/out~;
#X obj 145 341 else/sfz~ example;
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X restore 456 223 pd basic;
#X text 51 89 [sfz~] is based on "sfizz" and is a synthesizer for soundfont instruments in the SFZ format. For more details on the SFZ format \, players and instruments for download \, see:, f 67;
#X connect 16 0 28 0;
#X connect 28 0 0 0;
#X connect 28 1 0 1;
